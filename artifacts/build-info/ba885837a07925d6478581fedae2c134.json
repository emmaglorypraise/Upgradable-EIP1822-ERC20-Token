{
	"id": "ba885837a07925d6478581fedae2c134",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Upgradable E1P 1822/Implementation2.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.10;\n\nimport \"./Implementation1.sol\";\n\ncontract Implementation2 is Implementation1 {\n\n    \n    function _burn(uint amount) private returns(uint burnableToken){\n      burnableToken = calculateBurn(amount);\n\n      circulatingSuppy -= burnableToken/ decimal;\n    }\n\n    function calculateBurn(uint amount) public pure returns(uint burn){\n      burn = (amount * 10)/100;\n    }\n\n\n\n}"
			},
			"Upgradable E1P 1822/Implementation1.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.10;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\n\nimport \"./Proxible.sol\";\n\ncontract Implementation1 is ERC20(\"EIP-1822\", \"EIPI\"), Proxiable {\n    \n    uint circulatingSuppy;\n    uint public decimal = 1e18;\n    address public owner;\n    bool public initialized = false;\n\n    // 0xC60316Af37Ef376bE8BFcF9c290461d957e62501\n\n    mapping(address => uint) public _balance;\n\n    mapping (address => mapping(address => uint)) _allowance;\n\n\n    modifier onlyOwner() {\n      require(owner == msg.sender, \"No permission except to owner\");\n      _;\n      \n    }\n\n    function initialize() public {\n        require(owner == address(0), \"Already initalized\");\n        owner = msg.sender;\n        initialized = true;\n    }\n\n    function encodeer() public pure returns(bytes memory){\n        return abi.encodeWithSignature(\"initialize()\");\n    }\n\n\n    function mintToken(uint amount, address _to) public {\n       _mint(_to, amount);\n    }\n\n  function updateCode(address newCode) onlyOwner public {\n        updateCodeAddress(newCode);\n    }\n}"
			},
			"Upgradable E1P 1822/Proxible.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.10;\n\ncontract Proxiable {\n    // Code position in storage is keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\n\n    function updateCodeAddress(address newAddress) internal {\n        require(\n            bytes32(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) == Proxiable(newAddress).proxiableUUID(),\n            \"Not compatible\"\n        );\n        assembly { // solium-disable-line\n            sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, newAddress)\n        }\n    }\n\n    function proxiableUUID() public pure returns (bytes32) {\n        return 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7;\n    }\n} \n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Upgradable E1P 1822/Implementation1.sol": {
				"Implementation1": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encodeer",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newCode",
									"type": "address"
								}
							],
							"name": "updateCode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Upgradable E1P 1822/Implementation1.sol\":201:1151  contract Implementation1 is ERC20(\"EIP-1822\", \"EIPI\"), Proxiable {... */\n  mstore(0x40, 0x80)\n    /* \"Upgradable E1P 1822/Implementation1.sol\":326:330  1e18 */\n  0x0de0b6b3a7640000\n    /* \"Upgradable E1P 1822/Implementation1.sol\":304:330  uint public decimal = 1e18 */\n  0x06\n  sstore\n    /* \"Upgradable E1P 1822/Implementation1.sol\":362:393  bool public initialized = false */\n  0x07\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"Upgradable E1P 1822/Implementation1.sol\":201:1151  contract Implementation1 is ERC20(\"EIP-1822\", \"EIPI\"), Proxiable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x08\n  dup2\n  mstore\n  shl(0xc1, 0x22a4a816989c1919)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe0, 0x45495049)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  dup2\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  tag_4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  dup1\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Upgradable E1P 1822/Implementation1.sol\":201:1151  contract Implementation1 is ERC20(\"EIP-1822\", \"EIPI\"), Proxiable {... */\n  jump(tag_19)\ntag_5:\n  dup3\n  dup1\n  sload\n  tag_8\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_11\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_11:\n  dup3\n  0x1f\n  lt\n  tag_12\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_12:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_13:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_14\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_13)\ntag_14:\n  pop\n  tag_15\n  swap3\n  swap2\n  pop\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n  swap1\n  jump\t// out\ntag_16:\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_17)\n    /* \"#utility.yul\":14:394   */\ntag_9:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_21:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_22:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_19:\n    /* \"Upgradable E1P 1822/Implementation1.sol\":201:1151  contract Implementation1 is ERC20(\"EIP-1822\", \"EIPI\"), Proxiable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Upgradable E1P 1822/Implementation1.sol\":201:1151  contract Implementation1 is ERC20(\"EIP-1822\", \"EIPI\"), Proxiable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa140ae23\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa140ae23\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x76809ce3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x46951954\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x11d7fe4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1318:1332   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1311:1333   */\n      iszero\n        /* \"#utility.yul\":1293:1334   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1281:1283   */\n      0x20\n        /* \"#utility.yul\":1266:1284   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1153:1340   */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":839:955  function encodeer() public pure returns(bytes memory){... */\n    tag_5:\n      tag_26\n        /* \"Upgradable E1P 1822/Implementation1.sol\":909:948  abi.encodeWithSignature(\"initialize()\") */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe2, 0x204a7f07)\n      or\n      swap1\n      mstore\n      swap1\n        /* \"Upgradable E1P 1822/Implementation1.sol\":839:955  function encodeer() public pure returns(bytes memory){... */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":362:393  bool public initialized = false */\n    tag_6:\n      sload(0x07)\n      tag_30\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1714:1739   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1702:1704   */\n      0x20\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1568:1745   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_8:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"#utility.yul\":2225:2261   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2213:2215   */\n      0x20\n        /* \"#utility.yul\":2198:2216   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":2083:2267   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_10:\n      tag_30\n      tag_57\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1052:1149  function updateCode(address newCode) onlyOwner public {... */\n    tag_11:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n    tag_12:\n        /* \"Upgradable E1P 1822/Proxible.sol\":699:765  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n      jump(tag_43)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_43\n      tag_69\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":304:330  uint public decimal = 1e18 */\n    tag_14:\n      tag_43\n      sload(0x06)\n      dup2\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":681:833  function initialize() public {... */\n    tag_15:\n      tag_60\n      tag_76\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":336:356  address public owner */\n    tag_16:\n      sload(0x07)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_77:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2809:2841   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2791:2842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"Upgradable E1P 1822/Implementation1.sol\":336:356  address public owner */\n      tag_28\n        /* \"#utility.yul\":2645:2848   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_26\n      tag_82\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n    tag_18:\n      tag_60\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_89\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_30\n      tag_93\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":451:491  mapping(address => uint) public _balance */\n    tag_21:\n      tag_43\n      tag_97\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_97:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_22:\n      tag_43\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1052:1149  function updateCode(address newCode) onlyOwner public {... */\n    tag_63:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":599:604  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"Upgradable E1P 1822/Implementation1.sol\":608:618  msg.sender */\n      caller\n        /* \"Upgradable E1P 1822/Implementation1.sol\":599:618  owner == msg.sender */\n      eq\n        /* \"Upgradable E1P 1822/Implementation1.sol\":591:652  require(owner == msg.sender, \"No permission except to owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4194:4196   */\n      0x20\n        /* \"Upgradable E1P 1822/Implementation1.sol\":591:652  require(owner == msg.sender, \"No permission except to owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4176:4197   */\n      mstore\n        /* \"#utility.yul\":4233:4235   */\n      0x1d\n        /* \"#utility.yul\":4213:4231   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4206:4236   */\n      mstore\n        /* \"#utility.yul\":4272:4303   */\n      0x4e6f207065726d697373696f6e2065786365707420746f206f776e6572000000\n        /* \"#utility.yul\":4252:4270   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4245:4304   */\n      mstore\n        /* \"#utility.yul\":4321:4339   */\n      0x64\n      add\n        /* \"Upgradable E1P 1822/Implementation1.sol\":591:652  require(owner == msg.sender, \"No permission except to owner\") */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1116:1142  updateCodeAddress(newCode) */\n      tag_137\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1134:1141  newCode */\n      dup2\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1116:1133  updateCodeAddress */\n      tag_138\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1116:1142  updateCodeAddress(newCode) */\n      jump\t// in\n    tag_137:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1052:1149  function updateCode(address newCode) onlyOwner public {... */\n      pop\n      jump\t// out\n        /* \"Upgradable E1P 1822/Implementation1.sol\":681:833  function initialize() public {... */\n    tag_76:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":728:733  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"Upgradable E1P 1822/Implementation1.sol\":728:747  owner == address(0) */\n      iszero\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4552:4554   */\n      0x20\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4534:4555   */\n      mstore\n        /* \"#utility.yul\":4591:4593   */\n      0x12\n        /* \"#utility.yul\":4571:4589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4564:4594   */\n      mstore\n      shl(0x72, 0x105b1c9958591e481a5b9a5d185b1a5e9959)\n        /* \"#utility.yul\":4610:4628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4603:4651   */\n      mstore\n        /* \"#utility.yul\":4668:4686   */\n      0x64\n      add\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n      tag_134\n        /* \"#utility.yul\":4350:4692   */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n    tag_142:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":780:785  owner */\n      0x07\n        /* \"Upgradable E1P 1822/Implementation1.sol\":780:798  owner = msg.sender */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n        /* \"Upgradable E1P 1822/Implementation1.sol\":788:798  msg.sender */\n      caller\n        /* \"Upgradable E1P 1822/Implementation1.sol\":808:826  initialized = true */\n      and\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"Upgradable E1P 1822/Implementation1.sol\":681:833  function initialize() public {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n    tag_87:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1023:1041  _mint(_to, amount) */\n      tag_152\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1029:1032  _to */\n      dup2\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1034:1040  amount */\n      dup4\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1023:1028  _mint */\n      tag_153\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1023:1041  _mint(_to, amount) */\n      jump\t// in\n    tag_152:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_156\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4899:4901   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4881:4902   */\n      mstore\n        /* \"#utility.yul\":4938:4940   */\n      0x25\n        /* \"#utility.yul\":4918:4936   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4911:4941   */\n      mstore\n        /* \"#utility.yul\":4977:5011   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4957:4975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4950:5012   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5028:5046   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5021:5056   */\n      mstore\n        /* \"#utility.yul\":5073:5092   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_134\n        /* \"#utility.yul\":4697:5098   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5305:5307   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5287:5308   */\n      mstore\n        /* \"#utility.yul\":5344:5346   */\n      0x24\n        /* \"#utility.yul\":5324:5342   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5317:5347   */\n      mstore\n        /* \"#utility.yul\":5383:5417   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5363:5381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5356:5418   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5434:5452   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5427:5461   */\n      mstore\n        /* \"#utility.yul\":5478:5497   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_134\n        /* \"#utility.yul\":5103:5503   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5710:5712   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5692:5713   */\n      mstore\n        /* \"#utility.yul\":5749:5751   */\n      0x22\n        /* \"#utility.yul\":5729:5747   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5722:5752   */\n      mstore\n        /* \"#utility.yul\":5788:5822   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5768:5786   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5761:5823   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5839:5857   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5832:5864   */\n      mstore\n        /* \"#utility.yul\":5881:5900   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_134\n        /* \"#utility.yul\":5508:5906   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1714:1739   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_175\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_180\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6113:6115   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6095:6116   */\n      mstore\n        /* \"#utility.yul\":6152:6154   */\n      0x1d\n        /* \"#utility.yul\":6132:6150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6125:6155   */\n      mstore\n        /* \"#utility.yul\":6191:6222   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":6171:6189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6164:6223   */\n      mstore\n        /* \"#utility.yul\":6240:6258   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_134\n        /* \"#utility.yul\":5911:6264   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6471:6473   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6453:6474   */\n      mstore\n        /* \"#utility.yul\":6510:6512   */\n      0x25\n        /* \"#utility.yul\":6490:6508   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6483:6513   */\n      mstore\n        /* \"#utility.yul\":6549:6583   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6529:6547   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6522:6584   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6600:6618   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6593:6628   */\n      mstore\n        /* \"#utility.yul\":6645:6664   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_134\n        /* \"#utility.yul\":6269:6670   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6877:6879   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6859:6880   */\n      mstore\n        /* \"#utility.yul\":6916:6918   */\n      0x23\n        /* \"#utility.yul\":6896:6914   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6889:6919   */\n      mstore\n        /* \"#utility.yul\":6955:6989   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6935:6953   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6928:6990   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7006:7024   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6999:7032   */\n      mstore\n        /* \"#utility.yul\":7049:7068   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_134\n        /* \"#utility.yul\":6675:7074   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7263:7284   */\n      mstore\n        /* \"#utility.yul\":7320:7322   */\n      0x26\n        /* \"#utility.yul\":7300:7318   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7293:7323   */\n      mstore\n        /* \"#utility.yul\":7359:7393   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7339:7357   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7332:7394   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7410:7428   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7403:7439   */\n      mstore\n        /* \"#utility.yul\":7456:7475   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_134\n        /* \"#utility.yul\":7079:7481   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1714:1739   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n      jump\n        /* \"Upgradable E1P 1822/Proxible.sol\":220:621  function updateCodeAddress(address newAddress) internal {... */\n    tag_138:\n        /* \"Upgradable E1P 1822/Proxible.sol\":396:406  newAddress */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Upgradable E1P 1822/Proxible.sol\":386:421  Proxiable(newAddress).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"Upgradable E1P 1822/Proxible.sol\":386:423  Proxiable(newAddress).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"Upgradable E1P 1822/Proxible.sol\":315:381  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":307:423  bytes32(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) == Proxiable(newAddress).proxiableUUID() */\n      eq\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7877:7879   */\n      0x20\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7859:7880   */\n      mstore\n        /* \"#utility.yul\":7916:7918   */\n      0x0e\n        /* \"#utility.yul\":7896:7914   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7889:7919   */\n      mstore\n      shl(0x90, 0x4e6f7420636f6d70617469626c65)\n        /* \"#utility.yul\":7935:7953   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7928:7972   */\n      mstore\n        /* \"#utility.yul\":7989:8007   */\n      0x64\n      add\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n      tag_134\n        /* \"#utility.yul\":7675:8013   */\n      jump\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n    tag_201:\n        /* \"Upgradable E1P 1822/Proxible.sol\":526:592  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":519:605  sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, newAddress) */\n      sstore\n        /* \"Upgradable E1P 1822/Proxible.sol\":220:621  function updateCodeAddress(address newAddress) internal {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8220:8222   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8202:8223   */\n      mstore\n        /* \"#utility.yul\":8259:8261   */\n      0x1f\n        /* \"#utility.yul\":8239:8257   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8232:8262   */\n      mstore\n        /* \"#utility.yul\":8298:8331   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":8278:8296   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8271:8332   */\n      mstore\n        /* \"#utility.yul\":8349:8367   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_134\n        /* \"#utility.yul\":8018:8373   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8794:8800  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8778:8790  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8778:8800  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8955  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8974  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1714:1739   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:486   */\n    tag_214:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_218:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_218)\n    tag_220:\n        /* \"#utility.yul\":336:342   */\n      dup2\n        /* \"#utility.yul\":333:334   */\n      dup2\n        /* \"#utility.yul\":330:343   */\n      gt\n        /* \"#utility.yul\":327:414   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":402:403   */\n      0x00\n        /* \"#utility.yul\":395:399   */\n      0x20\n        /* \"#utility.yul\":386:392   */\n      dup4\n        /* \"#utility.yul\":381:384   */\n      dup8\n        /* \"#utility.yul\":377:393   */\n      add\n        /* \"#utility.yul\":373:400   */\n      add\n        /* \"#utility.yul\":366:404   */\n      mstore\n        /* \"#utility.yul\":327:414   */\n    tag_221:\n      pop\n        /* \"#utility.yul\":468:470   */\n      0x1f\n        /* \"#utility.yul\":447:462   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":443:472   */\n      and\n        /* \"#utility.yul\":434:473   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":475:479   */\n      0x20\n        /* \"#utility.yul\":430:480   */\n      add\n      swap3\n        /* \"#utility.yul\":14:486   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":491:711   */\n    tag_29:\n        /* \"#utility.yul\":640:642   */\n      0x20\n        /* \"#utility.yul\":629:638   */\n      dup2\n        /* \"#utility.yul\":622:643   */\n      mstore\n        /* \"#utility.yul\":603:607   */\n      0x00\n        /* \"#utility.yul\":660:705   */\n      tag_223\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":690:699   */\n      dup4\n        /* \"#utility.yul\":686:704   */\n      add\n        /* \"#utility.yul\":678:684   */\n      dup5\n        /* \"#utility.yul\":660:705   */\n      tag_214\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":652:705   */\n      swap4\n        /* \"#utility.yul\":491:711   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":716:889   */\n    tag_215:\n        /* \"#utility.yul\":784:804   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":833:864   */\n      dup2\n      and\n        /* \"#utility.yul\":823:865   */\n      dup2\n      eq\n        /* \"#utility.yul\":813:883   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":879:880   */\n      0x00\n        /* \"#utility.yul\":876:877   */\n      dup1\n        /* \"#utility.yul\":869:881   */\n      revert\n        /* \"#utility.yul\":813:883   */\n    tag_225:\n        /* \"#utility.yul\":716:889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":894:1148   */\n    tag_32:\n        /* \"#utility.yul\":962:968   */\n      0x00\n        /* \"#utility.yul\":970:976   */\n      dup1\n        /* \"#utility.yul\":1023:1025   */\n      0x40\n        /* \"#utility.yul\":1011:1020   */\n      dup4\n        /* \"#utility.yul\":1002:1009   */\n      dup6\n        /* \"#utility.yul\":998:1021   */\n      sub\n        /* \"#utility.yul\":994:1026   */\n      slt\n        /* \"#utility.yul\":991:1043   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1039:1040   */\n      0x00\n        /* \"#utility.yul\":1036:1037   */\n      dup1\n        /* \"#utility.yul\":1029:1041   */\n      revert\n        /* \"#utility.yul\":991:1043   */\n    tag_227:\n        /* \"#utility.yul\":1062:1091   */\n      tag_228\n        /* \"#utility.yul\":1081:1090   */\n      dup4\n        /* \"#utility.yul\":1062:1091   */\n      tag_215\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1052:1091   */\n      swap5\n        /* \"#utility.yul\":1138:1140   */\n      0x20\n        /* \"#utility.yul\":1123:1141   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1110:1142   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":894:1148   */\n      jump\t// out\n        /* \"#utility.yul\":1750:2078   */\n    tag_49:\n        /* \"#utility.yul\":1827:1833   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup1\n        /* \"#utility.yul\":1843:1849   */\n      0x00\n        /* \"#utility.yul\":1896:1898   */\n      0x60\n        /* \"#utility.yul\":1884:1893   */\n      dup5\n        /* \"#utility.yul\":1875:1882   */\n      dup7\n        /* \"#utility.yul\":1871:1894   */\n      sub\n        /* \"#utility.yul\":1867:1899   */\n      slt\n        /* \"#utility.yul\":1864:1916   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      dup1\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1864:1916   */\n    tag_234:\n        /* \"#utility.yul\":1935:1964   */\n      tag_235\n        /* \"#utility.yul\":1954:1963   */\n      dup5\n        /* \"#utility.yul\":1935:1964   */\n      tag_215\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1925:1964   */\n      swap3\n      pop\n        /* \"#utility.yul\":1983:2021   */\n      tag_236\n        /* \"#utility.yul\":2017:2019   */\n      0x20\n        /* \"#utility.yul\":2006:2015   */\n      dup6\n        /* \"#utility.yul\":2002:2020   */\n      add\n        /* \"#utility.yul\":1983:2021   */\n      tag_215\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1973:2021   */\n      swap2\n      pop\n        /* \"#utility.yul\":2068:2070   */\n      0x40\n        /* \"#utility.yul\":2057:2066   */\n      dup5\n        /* \"#utility.yul\":2053:2071   */\n      add\n        /* \"#utility.yul\":2040:2072   */\n      calldataload\n        /* \"#utility.yul\":2030:2072   */\n      swap1\n      pop\n        /* \"#utility.yul\":1750:2078   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2272:2458   */\n    tag_62:\n        /* \"#utility.yul\":2331:2337   */\n      0x00\n        /* \"#utility.yul\":2384:2386   */\n      0x20\n        /* \"#utility.yul\":2372:2381   */\n      dup3\n        /* \"#utility.yul\":2363:2370   */\n      dup5\n        /* \"#utility.yul\":2359:2382   */\n      sub\n        /* \"#utility.yul\":2355:2387   */\n      slt\n        /* \"#utility.yul\":2352:2404   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2400:2401   */\n      0x00\n        /* \"#utility.yul\":2397:2398   */\n      dup1\n        /* \"#utility.yul\":2390:2402   */\n      revert\n        /* \"#utility.yul\":2352:2404   */\n    tag_239:\n        /* \"#utility.yul\":2423:2452   */\n      tag_223\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2423:2452   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":2853:3107   */\n    tag_86:\n        /* \"#utility.yul\":2921:2927   */\n      0x00\n        /* \"#utility.yul\":2929:2935   */\n      dup1\n        /* \"#utility.yul\":2982:2984   */\n      0x40\n        /* \"#utility.yul\":2970:2979   */\n      dup4\n        /* \"#utility.yul\":2961:2968   */\n      dup6\n        /* \"#utility.yul\":2957:2980   */\n      sub\n        /* \"#utility.yul\":2953:2985   */\n      slt\n        /* \"#utility.yul\":2950:3002   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2995:2996   */\n      dup1\n        /* \"#utility.yul\":2988:3000   */\n      revert\n        /* \"#utility.yul\":2950:3002   */\n    tag_244:\n        /* \"#utility.yul\":3034:3043   */\n      dup3\n        /* \"#utility.yul\":3021:3044   */\n      calldataload\n        /* \"#utility.yul\":3011:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":3063:3101   */\n      tag_245\n        /* \"#utility.yul\":3097:3099   */\n      0x20\n        /* \"#utility.yul\":3086:3095   */\n      dup5\n        /* \"#utility.yul\":3082:3100   */\n      add\n        /* \"#utility.yul\":3063:3101   */\n      tag_215\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3053:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2853:3107   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3112:3372   */\n    tag_102:\n        /* \"#utility.yul\":3180:3186   */\n      0x00\n        /* \"#utility.yul\":3188:3194   */\n      dup1\n        /* \"#utility.yul\":3241:3243   */\n      0x40\n        /* \"#utility.yul\":3229:3238   */\n      dup4\n        /* \"#utility.yul\":3220:3227   */\n      dup6\n        /* \"#utility.yul\":3216:3239   */\n      sub\n        /* \"#utility.yul\":3212:3244   */\n      slt\n        /* \"#utility.yul\":3209:3261   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3257:3258   */\n      0x00\n        /* \"#utility.yul\":3254:3255   */\n      dup1\n        /* \"#utility.yul\":3247:3259   */\n      revert\n        /* \"#utility.yul\":3209:3261   */\n    tag_247:\n        /* \"#utility.yul\":3280:3309   */\n      tag_248\n        /* \"#utility.yul\":3299:3308   */\n      dup4\n        /* \"#utility.yul\":3280:3309   */\n      tag_215\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3270:3309   */\n      swap2\n      pop\n        /* \"#utility.yul\":3328:3366   */\n      tag_245\n        /* \"#utility.yul\":3362:3364   */\n      0x20\n        /* \"#utility.yul\":3351:3360   */\n      dup5\n        /* \"#utility.yul\":3347:3365   */\n      add\n        /* \"#utility.yul\":3328:3366   */\n      tag_215\n      jump\t// in\n        /* \"#utility.yul\":3377:3757   */\n    tag_107:\n        /* \"#utility.yul\":3456:3457   */\n      0x01\n        /* \"#utility.yul\":3452:3464   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3499:3511   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3520:3581   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3574:3578   */\n      0x7f\n        /* \"#utility.yul\":3566:3572   */\n      dup3\n        /* \"#utility.yul\":3562:3579   */\n      and\n        /* \"#utility.yul\":3552:3579   */\n      swap2\n      pop\n        /* \"#utility.yul\":3520:3581   */\n    tag_251:\n        /* \"#utility.yul\":3627:3629   */\n      0x20\n        /* \"#utility.yul\":3619:3625   */\n      dup3\n        /* \"#utility.yul\":3616:3630   */\n      lt\n        /* \"#utility.yul\":3596:3614   */\n      dup2\n        /* \"#utility.yul\":3593:3631   */\n      eq\n        /* \"#utility.yul\":3590:3751   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3673:3683   */\n      0x4e487b71\n        /* \"#utility.yul\":3668:3671   */\n      0xe0\n        /* \"#utility.yul\":3664:3684   */\n      shl\n        /* \"#utility.yul\":3661:3662   */\n      0x00\n        /* \"#utility.yul\":3654:3685   */\n      mstore\n        /* \"#utility.yul\":3708:3712   */\n      0x22\n        /* \"#utility.yul\":3705:3706   */\n      0x04\n        /* \"#utility.yul\":3698:3713   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3590:3751   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":3377:3757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3762:3987   */\n    tag_131:\n        /* \"#utility.yul\":3802:3805   */\n      0x00\n        /* \"#utility.yul\":3833:3834   */\n      dup3\n        /* \"#utility.yul\":3829:3835   */\n      not\n        /* \"#utility.yul\":3826:3827   */\n      dup3\n        /* \"#utility.yul\":3823:3836   */\n      gt\n        /* \"#utility.yul\":3820:3956   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3878:3888   */\n      0x4e487b71\n        /* \"#utility.yul\":3873:3876   */\n      0xe0\n        /* \"#utility.yul\":3869:3889   */\n      shl\n        /* \"#utility.yul\":3866:3867   */\n      0x00\n        /* \"#utility.yul\":3859:3890   */\n      mstore\n        /* \"#utility.yul\":3913:3917   */\n      0x11\n        /* \"#utility.yul\":3910:3911   */\n      0x04\n        /* \"#utility.yul\":3903:3918   */\n      mstore\n        /* \"#utility.yul\":3941:3945   */\n      0x24\n        /* \"#utility.yul\":3938:3939   */\n      0x00\n        /* \"#utility.yul\":3931:3946   */\n      revert\n        /* \"#utility.yul\":3820:3956   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":3972:3981   */\n      add\n      swap1\n        /* \"#utility.yul\":3762:3987   */\n      jump\t// out\n        /* \"#utility.yul\":7486:7670   */\n    tag_200:\n        /* \"#utility.yul\":7556:7562   */\n      0x00\n        /* \"#utility.yul\":7609:7611   */\n      0x20\n        /* \"#utility.yul\":7597:7606   */\n      dup3\n        /* \"#utility.yul\":7588:7595   */\n      dup5\n        /* \"#utility.yul\":7584:7607   */\n      sub\n        /* \"#utility.yul\":7580:7612   */\n      slt\n        /* \"#utility.yul\":7577:7629   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":7625:7626   */\n      0x00\n        /* \"#utility.yul\":7622:7623   */\n      dup1\n        /* \"#utility.yul\":7615:7627   */\n      revert\n        /* \"#utility.yul\":7577:7629   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":7648:7664   */\n      mload\n      swap2\n        /* \"#utility.yul\":7486:7670   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203b06f952e8c165f9dc06178877dbcb21bf87e7e0e3dfd3dc6162b140dd68b94064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:7"
															},
															"nodeType": "YulIf",
															"src": "157:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:7"
															},
															"nodeType": "YulIf",
															"src": "227:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:7",
														"type": ""
													}
												],
												"src": "14:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006006556007805460ff60a01b191690553480156200002a57600080fd5b50604080518082018252600881526722a4a816989c191960c11b6020808301918252835180850190945260048452634549504960e01b908401528151919291620000779160039162000096565b5080516200008d90600490602084019062000096565b50505062000179565b828054620000a4906200013c565b90600052602060002090601f016020900481019282620000c8576000855562000113565b82601f10620000e357805160ff191683800117855562000113565b8280016001018555821562000113579182015b8281111562000113578251825591602001919060010190620000f6565b506200012192915062000125565b5090565b5b8082111562000121576000815560010162000126565b600181811c908216806200015157607f821691505b602082108114156200017357634e487b7160e01b600052602260045260246000fd5b50919050565b610c9d80620001896000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a140ae2311610071578063a140ae23146102a4578063a457c2d7146102b7578063a9059cbb146102ca578063d3aceae2146102dd578063dd62ed3e146102fd57600080fd5b806370a082311461023757806376809ce3146102605780638129fc1c146102695780638da5cb5b1461027157806395d89b411461029c57600080fd5b806323b872dd116100f457806323b872dd146101c7578063313ce567146101da57806339509351146101e957806346951954146101fc57806352d1902d1461021157600080fd5b806306fdde0314610131578063095ea7b31461014f57806311d7fe4d14610172578063158ef93e146101a157806318160ddd146101b5575b600080fd5b610139610310565b6040516101469190610ae0565b60405180910390f35b61016261015d366004610b16565b6103a2565b6040519015158152602001610146565b6101396040805160048152602481019091526020810180516001600160e01b031663204a7f0760e21b17905290565b60075461016290600160a01b900460ff1681565b6002545b604051908152602001610146565b6101626101d5366004610b40565b6103ba565b60405160128152602001610146565b6101626101f7366004610b16565b6103de565b61020f61020a366004610b7c565b610400565b005b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf76101b9565b6101b9610245366004610b7c565b6001600160a01b031660009081526020819052604090205490565b6101b960065481565b61020f61046b565b600754610284906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101396104dc565b61020f6102b2366004610b97565b6104eb565b6101626102c5366004610b16565b6104f9565b6101626102d8366004610b16565b610574565b6101b96102eb366004610b7c565b60086020526000908152604090205481565b6101b961030b366004610bc3565b610582565b60606003805461031f90610bed565b80601f016020809104026020016040519081016040528092919081815260200182805461034b90610bed565b80156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b5050505050905090565b6000336103b08185856105ad565b5060019392505050565b6000336103c88582856106d1565b6103d385858561074b565b506001949350505050565b6000336103b08185856103f18383610582565b6103fb9190610c28565b6105ad565b6007546001600160a01b0316331461045f5760405162461bcd60e51b815260206004820152601d60248201527f4e6f207065726d697373696f6e2065786365707420746f206f776e657200000060448201526064015b60405180910390fd5b610468816108ef565b50565b6007546001600160a01b0316156104b95760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a5b9a5d185b1a5e995960721b6044820152606401610456565b6007805460ff60a01b1933166001600160a81b031990911617600160a01b179055565b60606004805461031f90610bed565b6104f581836109d4565b5050565b600033816105078286610582565b9050838110156105675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610456565b6103d382868684036105ad565b6000336103b081858561074b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661060f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610456565b6001600160a01b0382166106705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610456565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106dd8484610582565b9050600019811461074557818110156107385760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610456565b61074584848484036105ad565b50505050565b6001600160a01b0383166107af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610456565b6001600160a01b0382166108115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610456565b6001600160a01b038316600090815260208190526040902054818110156108895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610456565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610745565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610c4e565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7146109b05760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420636f6d70617469626c6560901b6044820152606401610456565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b6001600160a01b038216610a2a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610456565b8060026000828254610a3c9190610c28565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b81811015610ab957602081850181015186830182015201610a9d565b81811115610acb576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610af36020830184610a93565b9392505050565b80356001600160a01b0381168114610b1157600080fd5b919050565b60008060408385031215610b2957600080fd5b610b3283610afa565b946020939093013593505050565b600080600060608486031215610b5557600080fd5b610b5e84610afa565b9250610b6c60208501610afa565b9150604084013590509250925092565b600060208284031215610b8e57600080fd5b610af382610afa565b60008060408385031215610baa57600080fd5b82359150610bba60208401610afa565b90509250929050565b60008060408385031215610bd657600080fd5b610bdf83610afa565b9150610bba60208401610afa565b600181811c90821680610c0157607f821691505b60208210811415610c2257634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c4957634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610c6057600080fd5b505191905056fea26469706673582212203b06f952e8c165f9dc06178877dbcb21bf87e7e0e3dfd3dc6162b140dd68b94064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x22A4A816989C1919 PUSH1 0xC1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x45495049 PUSH1 0xE0 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x77 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x96 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x8D SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x96 JUMP JUMPDEST POP POP POP PUSH3 0x179 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xA4 SWAP1 PUSH3 0x13C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xC8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x113 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xE3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x113 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x113 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x113 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xF6 JUMP JUMPDEST POP PUSH3 0x121 SWAP3 SWAP2 POP PUSH3 0x125 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x126 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x151 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x173 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9D DUP1 PUSH3 0x189 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA140AE23 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA140AE23 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x46951954 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x11D7FE4D EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x204A7F07 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x162 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST STOP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x46B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x284 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31F SWAP1 PUSH2 0xBED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0xBED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x398 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x398 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B0 DUP2 DUP6 DUP6 PUSH2 0x5AD JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C8 DUP6 DUP3 DUP6 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x3D3 DUP6 DUP6 DUP6 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B0 DUP2 DUP6 DUP6 PUSH2 0x3F1 DUP4 DUP4 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207065726D697373696F6E2065786365707420746F206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x468 DUP2 PUSH2 0x8EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481A5B9A5D185B1A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT CALLER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x31F SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH2 0x4F5 DUP2 DUP4 PUSH2 0x9D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x507 DUP3 DUP7 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B0 DUP2 DUP6 DUP6 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DD DUP5 DUP5 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x745 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH2 0x745 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x745 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x951 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 EQ PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F7420636F6D70617469626C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA9D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAF3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB32 DUP4 PUSH2 0xAFA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5E DUP5 PUSH2 0xAFA JUMP JUMPDEST SWAP3 POP PUSH2 0xB6C PUSH1 0x20 DUP6 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF3 DUP3 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xBBA PUSH1 0x20 DUP5 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDF DUP4 PUSH2 0xAFA JUMP JUMPDEST SWAP2 POP PUSH2 0xBBA PUSH1 0x20 DUP5 ADD PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC49 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE MOD 0xF9 MSTORE 0xE8 0xC1 PUSH6 0xF9DC06178877 0xDB 0xCB 0x21 0xBF DUP8 0xE7 0xE0 0xE3 0xDF 0xD3 0xDC PUSH2 0x62B1 BLOCKHASH 0xDD PUSH9 0xB94064736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "201:950:0:-:0;;;326:4;304:26;;362:31;;;-1:-1:-1;;;;362:31:0;;;201:950;;;;;;;;;-1:-1:-1;1976:113:3;;;;;;;;;;;-1:-1:-1;;;1976:113:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:3;;;;2042:13;;1976:113;;;2042:13;;:5;;:13;:::i;:::-;-1:-1:-1;2065:17:3;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;201:950:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:950:0;;;-1:-1:-1;201:950:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:7;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;201:950:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_762": {
									"entryPoint": null,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_697": {
									"entryPoint": 1453,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_balance_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_751": {
									"entryPoint": null,
									"id": 751,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_580": {
									"entryPoint": 2516,
									"id": 580,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_878": {
									"entryPoint": null,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_740": {
									"entryPoint": 1745,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_523": {
									"entryPoint": 1867,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_318": {
									"entryPoint": 1410,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_343": {
									"entryPoint": 930,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimal_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_251": {
									"entryPoint": null,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_446": {
									"entryPoint": 1273,
									"id": 446,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@encodeer_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_405": {
									"entryPoint": 990,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_64": {
									"entryPoint": 1131,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialized_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintToken_88": {
									"entryPoint": 1259,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_231": {
									"entryPoint": 784,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_241": {
									"entryPoint": 1244,
									"id": 241,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_376": {
									"entryPoint": 954,
									"id": 376,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_300": {
									"entryPoint": 1396,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateCodeAddress_167": {
									"entryPoint": 2287,
									"id": 167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCode_100": {
									"entryPoint": 1024,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 2967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8375:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "64:422:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "78:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "109:19:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "146:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "141:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "208:110:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "232:4:7",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "226:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:7"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "164:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "178:21:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "180:17:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "160:3:7",
																"statements": []
															},
															"src": "156:162:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "352:62:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "381:3:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "386:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "377:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "377:16:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "395:4:7",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "373:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "373:27:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "366:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "366:38:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "366:38:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "333:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "336:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "330:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:13:7"
															},
															"nodeType": "YulIf",
															"src": "327:87:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "423:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "438:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "451:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "459:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "447:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "468:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "464:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "464:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "443:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "443:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "434:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "434:39:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "430:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "423:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "48:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:7",
														"type": ""
													}
												],
												"src": "14:472:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "629:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "652:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "701:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "686:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "652:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "581:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "592:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "603:4:7",
														"type": ""
													}
												],
												"src": "491:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "775:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "797:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "784:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "775:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "867:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "876:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "869:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "869:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "869:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "826:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "837:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "852:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "857:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "848:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "848:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "861:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "844:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "844:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "833:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "833:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "823:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "823:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:50:7"
															},
															"nodeType": "YulIf",
															"src": "813:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "744:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "755:5:7",
														"type": ""
													}
												],
												"src": "716:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1027:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1039:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1029:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1029:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1029:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1002:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1011:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1023:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "994:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:32:7"
															},
															"nodeType": "YulIf",
															"src": "991:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1062:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1100:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1127:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1138:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1110:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "939:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "950:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "962:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "970:6:7",
														"type": ""
													}
												],
												"src": "894:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1248:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1258:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1270:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1266:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1258:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1300:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1325:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1318:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1318:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1311:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1217:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1239:4:7",
														"type": ""
													}
												],
												"src": "1153:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1464:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1481:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1474:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1504:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1553:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1512:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1504:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1433:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1444:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1455:4:7",
														"type": ""
													}
												],
												"src": "1345:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1679:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1721:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1732:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1714:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1638:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1649:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1660:4:7",
														"type": ""
													}
												],
												"src": "1568:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1854:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1900:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1875:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1884:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1896:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:32:7"
															},
															"nodeType": "YulIf",
															"src": "1864:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1925:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1935:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1973:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2017:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1983:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2030:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2057:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2068:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2053:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2040:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1804:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1815:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1827:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1835:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1843:6:7",
														"type": ""
													}
												],
												"src": "1750:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2180:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2190:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2202:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2190:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2232:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2255:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2243:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2149:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2160:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2171:4:7",
														"type": ""
													}
												],
												"src": "2083:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2342:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2388:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2397:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2400:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2390:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2390:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2390:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2363:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2372:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2355:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:32:7"
															},
															"nodeType": "YulIf",
															"src": "2352:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2413:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2423:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2308:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2319:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2331:6:7",
														"type": ""
													}
												],
												"src": "2272:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2564:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2574:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2586:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2574:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2616:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2609:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2555:4:7",
														"type": ""
													}
												],
												"src": "2463:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2746:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2756:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2798:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2813:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2829:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2834:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2825:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2825:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2838:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2821:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2791:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2715:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2726:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2737:4:7",
														"type": ""
													}
												],
												"src": "2645:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2986:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2995:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2998:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2988:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2988:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2961:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2970:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:32:7"
															},
															"nodeType": "YulIf",
															"src": "2950:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3011:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3034:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3021:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3011:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3053:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3086:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3097:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3063:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3053:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2898:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2909:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2921:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2929:6:7",
														"type": ""
													}
												],
												"src": "2853:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3199:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3245:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3254:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3257:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3247:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3247:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3247:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3220:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3229:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3216:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3212:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:32:7"
															},
															"nodeType": "YulIf",
															"src": "3209:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3270:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3299:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3280:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3318:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3351:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3362:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3328:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3157:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3168:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3180:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3188:6:7",
														"type": ""
													}
												],
												"src": "3112:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3432:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3442:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3459:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3452:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3442:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3473:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3503:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3509:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3477:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3550:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3552:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3566:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3574:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3562:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3562:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3530:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:26:7"
															},
															"nodeType": "YulIf",
															"src": "3520:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3640:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3661:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3668:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3673:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3664:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3664:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3654:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3654:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3654:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3705:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3708:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3698:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3698:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3698:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3736:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3726:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3726:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3596:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3627:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3616:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3593:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:38:7"
															},
															"nodeType": "YulIf",
															"src": "3590:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3412:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3421:6:7",
														"type": ""
													}
												],
												"src": "3377:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3845:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3866:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3873:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3878:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3869:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3869:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3859:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3859:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3859:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3910:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3913:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3903:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3903:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3938:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3941:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3931:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3931:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3931:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3826:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3833:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3829:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3829:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3823:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:13:7"
															},
															"nodeType": "YulIf",
															"src": "3820:136:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3965:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3976:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3979:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3965:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3793:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3796:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3802:3:7",
														"type": ""
													}
												],
												"src": "3762:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4166:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4183:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4194:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4176:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4176:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4217:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4228:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4233:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4206:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4206:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4206:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4267:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4252:18:7"
																	},
																	{
																		"hexValue": "4e6f207065726d697373696f6e2065786365707420746f206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4272:31:7",
																		"type": "",
																		"value": "No permission except to owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4245:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4245:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4325:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4336:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4321:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4313:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4143:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4157:4:7",
														"type": ""
													}
												],
												"src": "3992:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4524:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4541:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4534:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4534:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:7"
																	},
																	{
																		"hexValue": "416c726561647920696e6974616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4630:20:7",
																		"type": "",
																		"value": "Already initalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4603:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4660:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4672:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4660:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4501:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4515:4:7",
														"type": ""
													}
												],
												"src": "4350:342:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4871:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4888:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4881:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4881:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4881:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4922:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4933:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4918:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4918:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4938:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4911:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4961:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4972:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4957:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4957:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4977:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4950:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5032:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5043:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5028:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5048:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5021:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5021:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5065:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5077:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5073:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5073:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5065:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4848:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4862:4:7",
														"type": ""
													}
												],
												"src": "4697:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5277:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5294:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5287:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5339:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5324:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5317:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5383:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5438:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5449:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5434:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5434:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5454:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5427:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5470:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5482:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5493:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5470:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5254:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5268:4:7",
														"type": ""
													}
												],
												"src": "5103:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5682:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5699:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5710:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5733:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5744:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5729:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5729:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5722:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5722:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5722:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5772:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5783:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5768:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5768:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5788:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5761:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5843:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5854:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5859:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5832:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5873:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5885:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5881:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5873:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5659:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5673:4:7",
														"type": ""
													}
												],
												"src": "5508:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6085:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6102:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6113:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6095:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6095:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6136:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6147:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6132:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6132:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6152:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6125:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6125:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6191:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6164:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6164:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6232:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6244:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6255:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6240:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6232:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6062:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6076:4:7",
														"type": ""
													}
												],
												"src": "5911:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6443:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6460:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6453:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6494:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6505:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6490:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6490:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6510:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6533:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6529:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6529:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6549:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6522:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6620:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6593:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6593:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6593:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6637:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6649:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6637:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6420:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6434:4:7",
														"type": ""
													}
												],
												"src": "6269:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6849:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6866:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6877:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6859:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6859:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6900:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6911:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6896:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6896:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6916:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6889:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6889:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6939:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6950:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6935:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6955:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6928:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6928:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6928:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7021:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7026:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7041:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7053:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7064:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7041:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6826:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6840:4:7",
														"type": ""
													}
												],
												"src": "6675:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7253:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7270:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7281:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7263:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7263:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7304:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7315:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7300:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7300:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7320:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7293:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7293:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7343:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7354:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7339:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7339:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7359:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7332:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7332:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7332:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7414:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7425:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7410:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7410:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7430:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7403:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7403:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7448:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7460:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7471:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7456:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7456:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7448:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7230:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7244:4:7",
														"type": ""
													}
												],
												"src": "7079:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7567:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7613:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7622:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7625:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7615:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7615:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7615:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7588:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7584:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7584:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7580:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7580:32:7"
															},
															"nodeType": "YulIf",
															"src": "7577:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7638:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7648:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7638:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7533:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7544:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7556:6:7",
														"type": ""
													}
												],
												"src": "7486:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7849:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7866:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7877:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7859:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7859:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7900:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7911:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7896:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7896:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7916:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7889:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7889:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7939:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7950:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7935:18:7"
																	},
																	{
																		"hexValue": "4e6f7420636f6d70617469626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7955:16:7",
																		"type": "",
																		"value": "Not compatible"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7928:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7928:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7928:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7981:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7993:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8004:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7989:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7981:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7826:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7840:4:7",
														"type": ""
													}
												],
												"src": "7675:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8192:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8209:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8220:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8202:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8254:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8259:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8232:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8282:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8293:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8298:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8271:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8271:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8341:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8353:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8364:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8349:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8349:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8341:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8169:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8183:4:7",
														"type": ""
													}
												],
												"src": "8018:355:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"No permission except to owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already initalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not compatible\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a140ae2311610071578063a140ae23146102a4578063a457c2d7146102b7578063a9059cbb146102ca578063d3aceae2146102dd578063dd62ed3e146102fd57600080fd5b806370a082311461023757806376809ce3146102605780638129fc1c146102695780638da5cb5b1461027157806395d89b411461029c57600080fd5b806323b872dd116100f457806323b872dd146101c7578063313ce567146101da57806339509351146101e957806346951954146101fc57806352d1902d1461021157600080fd5b806306fdde0314610131578063095ea7b31461014f57806311d7fe4d14610172578063158ef93e146101a157806318160ddd146101b5575b600080fd5b610139610310565b6040516101469190610ae0565b60405180910390f35b61016261015d366004610b16565b6103a2565b6040519015158152602001610146565b6101396040805160048152602481019091526020810180516001600160e01b031663204a7f0760e21b17905290565b60075461016290600160a01b900460ff1681565b6002545b604051908152602001610146565b6101626101d5366004610b40565b6103ba565b60405160128152602001610146565b6101626101f7366004610b16565b6103de565b61020f61020a366004610b7c565b610400565b005b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf76101b9565b6101b9610245366004610b7c565b6001600160a01b031660009081526020819052604090205490565b6101b960065481565b61020f61046b565b600754610284906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101396104dc565b61020f6102b2366004610b97565b6104eb565b6101626102c5366004610b16565b6104f9565b6101626102d8366004610b16565b610574565b6101b96102eb366004610b7c565b60086020526000908152604090205481565b6101b961030b366004610bc3565b610582565b60606003805461031f90610bed565b80601f016020809104026020016040519081016040528092919081815260200182805461034b90610bed565b80156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b5050505050905090565b6000336103b08185856105ad565b5060019392505050565b6000336103c88582856106d1565b6103d385858561074b565b506001949350505050565b6000336103b08185856103f18383610582565b6103fb9190610c28565b6105ad565b6007546001600160a01b0316331461045f5760405162461bcd60e51b815260206004820152601d60248201527f4e6f207065726d697373696f6e2065786365707420746f206f776e657200000060448201526064015b60405180910390fd5b610468816108ef565b50565b6007546001600160a01b0316156104b95760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a5b9a5d185b1a5e995960721b6044820152606401610456565b6007805460ff60a01b1933166001600160a81b031990911617600160a01b179055565b60606004805461031f90610bed565b6104f581836109d4565b5050565b600033816105078286610582565b9050838110156105675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610456565b6103d382868684036105ad565b6000336103b081858561074b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661060f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610456565b6001600160a01b0382166106705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610456565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106dd8484610582565b9050600019811461074557818110156107385760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610456565b61074584848484036105ad565b50505050565b6001600160a01b0383166107af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610456565b6001600160a01b0382166108115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610456565b6001600160a01b038316600090815260208190526040902054818110156108895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610456565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610745565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610c4e565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7146109b05760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420636f6d70617469626c6560901b6044820152606401610456565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b6001600160a01b038216610a2a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610456565b8060026000828254610a3c9190610c28565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b81811015610ab957602081850181015186830182015201610a9d565b81811115610acb576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610af36020830184610a93565b9392505050565b80356001600160a01b0381168114610b1157600080fd5b919050565b60008060408385031215610b2957600080fd5b610b3283610afa565b946020939093013593505050565b600080600060608486031215610b5557600080fd5b610b5e84610afa565b9250610b6c60208501610afa565b9150604084013590509250925092565b600060208284031215610b8e57600080fd5b610af382610afa565b60008060408385031215610baa57600080fd5b82359150610bba60208401610afa565b90509250929050565b60008060408385031215610bd657600080fd5b610bdf83610afa565b9150610bba60208401610afa565b600181811c90821680610c0157607f821691505b60208210811415610c2257634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c4957634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610c6057600080fd5b505191905056fea26469706673582212203b06f952e8c165f9dc06178877dbcb21bf87e7e0e3dfd3dc6162b140dd68b94064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA140AE23 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA140AE23 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x46951954 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x11D7FE4D EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x204A7F07 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x162 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST STOP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x46B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x284 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31F SWAP1 PUSH2 0xBED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0xBED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x398 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x398 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B0 DUP2 DUP6 DUP6 PUSH2 0x5AD JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C8 DUP6 DUP3 DUP6 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x3D3 DUP6 DUP6 DUP6 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B0 DUP2 DUP6 DUP6 PUSH2 0x3F1 DUP4 DUP4 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207065726D697373696F6E2065786365707420746F206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x468 DUP2 PUSH2 0x8EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481A5B9A5D185B1A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT CALLER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x31F SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH2 0x4F5 DUP2 DUP4 PUSH2 0x9D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x507 DUP3 DUP7 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B0 DUP2 DUP6 DUP6 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DD DUP5 DUP5 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x745 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH2 0x745 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x745 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x951 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 EQ PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F7420636F6D70617469626C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA9D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xAF3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB32 DUP4 PUSH2 0xAFA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5E DUP5 PUSH2 0xAFA JUMP JUMPDEST SWAP3 POP PUSH2 0xB6C PUSH1 0x20 DUP6 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF3 DUP3 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xBBA PUSH1 0x20 DUP5 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDF DUP4 PUSH2 0xAFA JUMP JUMPDEST SWAP2 POP PUSH2 0xBBA PUSH1 0x20 DUP5 ADD PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC01 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC49 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE MOD 0xF9 MSTORE 0xE8 0xC1 PUSH6 0xF9DC06178877 0xDB 0xCB 0x21 0xBF DUP8 0xE7 0xE0 0xE3 0xDF 0xD3 0xDC PUSH2 0x62B1 BLOCKHASH 0xDD PUSH9 0xB94064736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "201:950:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1318:14:7;;1311:22;1293:41;;1281:2;1266:18;4431:197:3;1153:187:7;839:116:0;;909:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;909:39:0;-1:-1:-1;;;909:39:0;;;;839:116;362:31;;;;;-1:-1:-1;;;362:31:0;;;;;;3242:106:3;3329:12;;3242:106;;;1714:25:7;;;1702:2;1687:18;3242:106:3;1568:177:7;5190:286:3;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;2225:36:7;;2213:2;2198:18;3091:91:3;2083:184:7;5871:234:3;;;;;;:::i;:::-;;:::i;1052:97:0:-;;;;;;:::i;:::-;;:::i;:::-;;627:145:2;699:66;627:145;;3406:125:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:3;3480:7;3506:18;;;;;;;;;;;;3406:125;304:26:0;;;;;;681:152;;;:::i;336:20::-;;;;;-1:-1:-1;;;;;336:20:0;;;;;;-1:-1:-1;;;;;2809:32:7;;;2791:51;;2779:2;2764:18;336:20:0;2645:203:7;2365:102:3;;;:::i;962:86:0:-;;;;;;:::i;:::-;;:::i;6592:427:3:-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;451:40:0:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3974:149:3;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:3;719:10:6;4584:7:3;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:3;;4431:197;-1:-1:-1;;;4431:197:3:o;5190:286::-;5317:4;719:10:6;5373:38:3;5389:4;719:10:6;5404:6:3;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:3;;5190:286;-1:-1:-1;;;;5190:286:3:o;5871:234::-;5959:4;719:10:6;6013:64:3;719:10:6;6029:7:3;6066:10;6038:25;719:10:6;6029:7:3;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1052:97:0:-;599:5;;-1:-1:-1;;;;;599:5:0;608:10;599:19;591:61;;;;-1:-1:-1;;;591:61:0;;4194:2:7;591:61:0;;;4176:21:7;4233:2;4213:18;;;4206:30;4272:31;4252:18;;;4245:59;4321:18;;591:61:0;;;;;;;;;1116:26:::1;1134:7;1116:17;:26::i;:::-;1052:97:::0;:::o;681:152::-;728:5;;-1:-1:-1;;;;;728:5:0;:19;720:50;;;;-1:-1:-1;;;720:50:0;;4552:2:7;720:50:0;;;4534:21:7;4591:2;4571:18;;;4564:30;-1:-1:-1;;;4610:18:7;;;4603:48;4668:18;;720:50:0;4350:342:7;720:50:0;780:5;:18;;-1:-1:-1;;;;788:10:0;808:18;-1:-1:-1;;;;;;808:18:0;;;;-1:-1:-1;;;808:18:0;;;681:152::o;2365:102:3:-;2421:13;2453:7;2446:14;;;;;:::i;962:86:0:-;1023:18;1029:3;1034:6;1023:5;:18::i;:::-;962:86;;:::o;6592:427:3:-;6685:4;719:10:6;6685:4:3;6766:25;719:10:6;6783:7:3;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:3;;4899:2:7;6801:85:3;;;4881:21:7;4938:2;4918:18;;;4911:30;4977:34;4957:18;;;4950:62;-1:-1:-1;;;5028:18:7;;;5021:35;5073:19;;6801:85:3;4697:401:7;6801:85:3;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:3;719:10:6;3877:2:3;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:3;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:3;;10627:68;;;;-1:-1:-1;;;10627:68:3;;5305:2:7;10627:68:3;;;5287:21:7;5344:2;5324:18;;;5317:30;5383:34;5363:18;;;5356:62;-1:-1:-1;;;5434:18:7;;;5427:34;5478:19;;10627:68:3;5103:400:7;10627:68:3;-1:-1:-1;;;;;10713:21:3;;10705:68;;;;-1:-1:-1;;;10705:68:3;;5710:2:7;10705:68:3;;;5692:21:7;5749:2;5729:18;;;5722:30;5788:34;5768:18;;;5761:62;-1:-1:-1;;;5839:18:7;;;5832:32;5881:19;;10705:68:3;5508:398:7;10705:68:3;-1:-1:-1;;;;;10784:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1714:25:7;;;10835:32:3;;1687:18:7;10835:32:3;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:3;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:3;;6113:2:7;11404:68:3;;;6095:21:7;6152:2;6132:18;;;6125:30;6191:31;6171:18;;;6164:59;6240:18;;11404:68:3;5911:353:7;11404:68:3;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:3;;7591:68;;;;-1:-1:-1;;;7591:68:3;;6471:2:7;7591:68:3;;;6453:21:7;6510:2;6490:18;;;6483:30;6549:34;6529:18;;;6522:62;-1:-1:-1;;;6600:18:7;;;6593:35;6645:19;;7591:68:3;6269:401:7;7591:68:3;-1:-1:-1;;;;;7677:16:3;;7669:64;;;;-1:-1:-1;;;7669:64:3;;6877:2:7;7669:64:3;;;6859:21:7;6916:2;6896:18;;;6889:30;6955:34;6935:18;;;6928:62;-1:-1:-1;;;7006:18:7;;;6999:33;7049:19;;7669:64:3;6675:399:7;7669:64:3;-1:-1:-1;;;;;7815:15:3;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:3;;7281:2:7;7840:72:3;;;7263:21:7;7320:2;7300:18;;;7293:30;7359:34;7339:18;;;7332:62;-1:-1:-1;;;7410:18:7;;;7403:36;7456:19;;7840:72:3;7079:402:7;7840:72:3;-1:-1:-1;;;;;7946:15:3;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1714:25:7;;;8161:13:3;;8210:26;;1687:18:7;8210:26:3;;;;;;;8247:37;12180:121;220:401:2;396:10;-1:-1:-1;;;;;386:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;315:66;307:116;286:177;;;;-1:-1:-1;;;286:177:2;;7877:2:7;286:177:2;;;7859:21:7;7916:2;7896:18;;;7889:30;-1:-1:-1;;;7935:18:7;;;7928:44;7989:18;;286:177:2;7675:338:7;286:177:2;526:66;519:86;220:401::o;8567:535:3:-;-1:-1:-1;;;;;8650:21:3;;8642:65;;;;-1:-1:-1;;;8642:65:3;;8220:2:7;8642:65:3;;;8202:21:7;8259:2;8239:18;;;8232:30;8298:33;8278:18;;;8271:61;8349:18;;8642:65:3;8018:355:7;8642:65:3;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1714:25:7;;;8999:37:3;;1687:18:7;8999:37:3;;;;;;;962:86:0;;:::o;14:472:7:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;336:6;333:1;330:13;327:87;;;402:1;395:4;386:6;381:3;377:16;373:27;366:38;327:87;-1:-1:-1;468:2:7;447:15;-1:-1:-1;;443:29:7;434:39;;;;475:4;430:50;;14:472;-1:-1:-1;;14:472:7:o;491:220::-;640:2;629:9;622:21;603:4;660:45;701:2;690:9;686:18;678:6;660:45;:::i;:::-;652:53;491:220;-1:-1:-1;;;491:220:7:o;716:173::-;784:20;;-1:-1:-1;;;;;833:31:7;;823:42;;813:70;;879:1;876;869:12;813:70;716:173;;;:::o;894:254::-;962:6;970;1023:2;1011:9;1002:7;998:23;994:32;991:52;;;1039:1;1036;1029:12;991:52;1062:29;1081:9;1062:29;:::i;:::-;1052:39;1138:2;1123:18;;;;1110:32;;-1:-1:-1;;;894:254:7:o;1750:328::-;1827:6;1835;1843;1896:2;1884:9;1875:7;1871:23;1867:32;1864:52;;;1912:1;1909;1902:12;1864:52;1935:29;1954:9;1935:29;:::i;:::-;1925:39;;1983:38;2017:2;2006:9;2002:18;1983:38;:::i;:::-;1973:48;;2068:2;2057:9;2053:18;2040:32;2030:42;;1750:328;;;;;:::o;2272:186::-;2331:6;2384:2;2372:9;2363:7;2359:23;2355:32;2352:52;;;2400:1;2397;2390:12;2352:52;2423:29;2442:9;2423:29;:::i;2853:254::-;2921:6;2929;2982:2;2970:9;2961:7;2957:23;2953:32;2950:52;;;2998:1;2995;2988:12;2950:52;3034:9;3021:23;3011:33;;3063:38;3097:2;3086:9;3082:18;3063:38;:::i;:::-;3053:48;;2853:254;;;;;:::o;3112:260::-;3180:6;3188;3241:2;3229:9;3220:7;3216:23;3212:32;3209:52;;;3257:1;3254;3247:12;3209:52;3280:29;3299:9;3280:29;:::i;:::-;3270:39;;3328:38;3362:2;3351:9;3347:18;3328:38;:::i;3377:380::-;3456:1;3452:12;;;;3499;;;3520:61;;3574:4;3566:6;3562:17;3552:27;;3520:61;3627:2;3619:6;3616:14;3596:18;3593:38;3590:161;;;3673:10;3668:3;3664:20;3661:1;3654:31;3708:4;3705:1;3698:15;3736:4;3733:1;3726:15;3590:161;;3377:380;;;:::o;3762:225::-;3802:3;3833:1;3829:6;3826:1;3823:13;3820:136;;;3878:10;3873:3;3869:20;3866:1;3859:31;3913:4;3910:1;3903:15;3941:4;3938:1;3931:15;3820:136;-1:-1:-1;3972:9:7;;3762:225::o;7486:184::-;7556:6;7609:2;7597:9;7588:7;7584:23;7580:32;7577:52;;;7625:1;7622;7615:12;7577:52;-1:-1:-1;7648:16:7;;7486:184;-1:-1:-1;7486:184:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "645800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balance(address)": "2607",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2563",
								"decimal()": "2340",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26994",
								"encodeer()": "infinite",
								"increaseAllowance(address,uint256)": "27045",
								"initialize()": "26617",
								"initialized()": "2417",
								"mintToken(uint256,address)": "50827",
								"name()": "infinite",
								"owner()": "2426",
								"proxiableUUID()": "303",
								"symbol()": "infinite",
								"totalSupply()": "2393",
								"transfer(address,uint256)": "51112",
								"transferFrom(address,address,uint256)": "infinite",
								"updateCode(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 304,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 304,
									"end": 330,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 362,
									"end": 393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "22A4A816989C1919"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "45495049"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 1151,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b06f952e8c165f9dc06178877dbcb21bf87e7e0e3dfd3dc6162b140dd68b94064736f6c634300080a0033",
									".code": [
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "A140AE23"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "A140AE23"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "D3ACEAE2"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "76809CE3"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "46951954"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "11D7FE4D"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "158EF93E"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1153,
											"end": 1340,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 839,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 839,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 839,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 909,
											"end": 948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "204A7F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 909,
											"end": 948,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 839,
											"end": 955,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 362,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1704,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1568,
											"end": 1745,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 772,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 304,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 304,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 304,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 330,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 336,
											"end": 356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2841,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2645,
											"end": 2848,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 599,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 618,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 591,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4196,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4236,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4303,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207065726D697373696F6E2065786365707420746F206F776E6572000000"
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 591,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 728,
											"end": 733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 728,
											"end": 733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 4555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481A5B9A5D185B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4686,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4668,
											"end": 4686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4350,
											"end": 4692,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 780,
											"end": 798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 808,
											"end": 826,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1029,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 4902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 4941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5011,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 5012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4697,
											"end": 5098,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5417,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5497,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5478,
											"end": 5497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5103,
											"end": 5503,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5692,
											"end": 5713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5788,
											"end": 5822,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5881,
											"end": 5900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5508,
											"end": 5906,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6115,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6095,
											"end": 6116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6154,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6132,
											"end": 6150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6125,
											"end": 6155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6222,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6258,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6240,
											"end": 6258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5911,
											"end": 6264,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6510,
											"end": 6512,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6513,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6664,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6645,
											"end": 6664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6269,
											"end": 6670,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6859,
											"end": 6880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6916,
											"end": 6918,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6896,
											"end": 6914,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6896,
											"end": 6914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6955,
											"end": 6989,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6935,
											"end": 6953,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6935,
											"end": 6953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6935,
											"end": 6953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 6990,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6999,
											"end": 7032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7068,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7049,
											"end": 7068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6675,
											"end": 7074,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7284,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7300,
											"end": 7318,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7300,
											"end": 7318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7323,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7359,
											"end": 7393,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7428,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7410,
											"end": 7428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7403,
											"end": 7439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 7079,
											"end": 7481,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 220,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 386,
											"end": 421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 386,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 381,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 307,
											"end": 423,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 286,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7918,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 7896,
											"end": 7914,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7896,
											"end": 7914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420636F6D70617469626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 7972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7675,
											"end": 8013,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 286,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 526,
											"end": 592,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 519,
											"end": 605,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8220,
											"end": 8222,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8261,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8331,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8271,
											"end": 8332,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8349,
											"end": 8367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 8018,
											"end": 8373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 486,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 14,
											"end": 486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 333,
											"end": 334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 343,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 327,
											"end": 414,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 327,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 327,
											"end": 414,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 402,
											"end": 403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 381,
											"end": 384,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 377,
											"end": 393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 373,
											"end": 400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 366,
											"end": 404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 327,
											"end": 414,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 327,
											"end": 414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 468,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 447,
											"end": 462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 443,
											"end": 472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 430,
											"end": 480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 486,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 711,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 640,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 660,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 652,
											"end": 705,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 491,
											"end": 711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 491,
											"end": 711,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 716,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 716,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 784,
											"end": 804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 784,
											"end": 804,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 833,
											"end": 864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 833,
											"end": 864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 823,
											"end": 865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 823,
											"end": 865,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 813,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 813,
											"end": 883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 879,
											"end": 880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 813,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 813,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1148,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 894,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 994,
											"end": 1026,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 894,
											"end": 1148,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1898,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1899,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2017,
											"end": 2019,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2458,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2272,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2387,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2968,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2985,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3112,
											"end": 3372,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3112,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3238,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3227,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3239,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3244,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3259,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3299,
											"end": 3308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3280,
											"end": 3309,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3280,
											"end": 3309,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3280,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3328,
											"end": 3366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3377,
											"end": 3757,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3377,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3520,
											"end": 3581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3578,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3579,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3581,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3520,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3631,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3590,
											"end": 3751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3683,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3751,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3590,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3757,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3757,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3757,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3762,
											"end": 3987,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3762,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3836,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3956,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3820,
											"end": 3956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3888,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3869,
											"end": 3889,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3910,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 3918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3820,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3762,
											"end": 3987,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7486,
											"end": 7670,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7486,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7556,
											"end": 7562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7595,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7584,
											"end": 7607,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7612,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7629,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7577,
											"end": 7629,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7615,
											"end": 7627,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7629,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7577,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7648,
											"end": 7664,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7486,
											"end": 7670,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimal()": "76809ce3",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"encodeer()": "11d7fe4d",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"initialized()": "158ef93e",
							"mintToken(uint256,address)": "a140ae23",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateCode(address)": "46951954"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCode\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Upgradable E1P 1822/Implementation1.sol\":\"Implementation1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Upgradable E1P 1822/Implementation1.sol\":{\"keccak256\":\"0x505302a014088a162a361ca5f550316d68cbea64ab8ab3a66ef4edb47a987605\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f7dbde88186b635fee01854007fdfc897a78b5ea02afa21e77e091085ea9b7ea\",\"dweb:/ipfs/QmYN187Ws3SMA7mjka7hoiNyLWsxAVNx5zsP4ANajyVauh\"]},\"Upgradable E1P 1822/Proxible.sol\":{\"keccak256\":\"0x4310e5f07a90127bda2642bf19f3dcc044b22c76703394e869fed03b90d5b417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7407757aa5edbdda889aeab0fb0a224c3613f153109108be9f3bde3b9f40688e\",\"dweb:/ipfs/QmcvYusmf63QZfH39EUydvCqjzofCb7WUdc7bZfCBD9qe5\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 198,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 200,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 202,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 204,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 11,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "circulatingSuppy",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "decimal",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "initialized",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 23,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_balance",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "Upgradable E1P 1822/Implementation1.sol:Implementation1",
								"label": "_allowance",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Upgradable E1P 1822/Implementation2.sol": {
				"Implementation2": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "burn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encodeer",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newCode",
									"type": "address"
								}
							],
							"name": "updateCode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Upgradable E1P 1822/Implementation2.sol\":98:436  contract Implementation2 is Implementation1 {... */\n  mstore(0x40, 0x80)\n    /* \"Upgradable E1P 1822/Implementation1.sol\":326:330  1e18 */\n  0x0de0b6b3a7640000\n    /* \"Upgradable E1P 1822/Implementation1.sol\":304:330  uint public decimal = 1e18 */\n  0x06\n  sstore\n    /* \"Upgradable E1P 1822/Implementation1.sol\":362:393  bool public initialized = false */\n  0x07\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"Upgradable E1P 1822/Implementation2.sol\":98:436  contract Implementation2 is Implementation1 {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x08\n  dup2\n  mstore\n  shl(0xc1, 0x22a4a816989c1919)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe0, 0x45495049)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  dup2\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  tag_4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  dup1\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Upgradable E1P 1822/Implementation2.sol\":98:436  contract Implementation2 is Implementation1 {... */\n  jump(tag_19)\ntag_5:\n  dup3\n  dup1\n  sload\n  tag_8\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_11\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_11:\n  dup3\n  0x1f\n  lt\n  tag_12\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_12:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_13:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_14\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_13)\ntag_14:\n  pop\n  tag_15\n  swap3\n  swap2\n  pop\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n  swap1\n  jump\t// out\ntag_16:\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_17)\n    /* \"#utility.yul\":14:394   */\ntag_9:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_21:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_22:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_19:\n    /* \"Upgradable E1P 1822/Implementation2.sol\":98:436  contract Implementation2 is Implementation1 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Upgradable E1P 1822/Implementation2.sol\":98:436  contract Implementation2 is Implementation1 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa140ae23\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa140ae23\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdc287c7e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x76809ce3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x46951954\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x11d7fe4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1318:1332   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1311:1333   */\n      iszero\n        /* \"#utility.yul\":1293:1334   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1281:1283   */\n      0x20\n        /* \"#utility.yul\":1266:1284   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1153:1340   */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":839:955  function encodeer() public pure returns(bytes memory){... */\n    tag_5:\n      tag_27\n        /* \"Upgradable E1P 1822/Implementation1.sol\":909:948  abi.encodeWithSignature(\"initialize()\") */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe2, 0x204a7f07)\n      or\n      swap1\n      mstore\n      swap1\n        /* \"Upgradable E1P 1822/Implementation1.sol\":839:955  function encodeer() public pure returns(bytes memory){... */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":362:393  bool public initialized = false */\n    tag_6:\n      sload(0x07)\n      tag_31\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1714:1739   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1702:1704   */\n      0x20\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_29\n        /* \"#utility.yul\":1568:1745   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_8:\n      tag_31\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"#utility.yul\":2225:2261   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2213:2215   */\n      0x20\n        /* \"#utility.yul\":2198:2216   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      tag_29\n        /* \"#utility.yul\":2083:2267   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_10:\n      tag_31\n      tag_58\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1052:1149  function updateCode(address newCode) onlyOwner public {... */\n    tag_11:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n    tag_12:\n        /* \"Upgradable E1P 1822/Proxible.sol\":699:765  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n      jump(tag_44)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_44\n      tag_70\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":304:330  uint public decimal = 1e18 */\n    tag_14:\n      tag_44\n      sload(0x06)\n      dup2\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":681:833  function initialize() public {... */\n    tag_15:\n      tag_61\n      tag_77\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":336:356  address public owner */\n    tag_16:\n      sload(0x07)\n      tag_78\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_78:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2809:2841   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2791:2842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"Upgradable E1P 1822/Implementation1.sol\":336:356  address public owner */\n      tag_29\n        /* \"#utility.yul\":2645:2848   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_27\n      tag_83\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n    tag_18:\n      tag_61\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_31\n      tag_90\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_31\n      tag_94\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":451:491  mapping(address => uint) public _balance */\n    tag_21:\n      tag_44\n      tag_98\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_98:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Upgradable E1P 1822/Implementation2.sol\":326:431  function calculateBurn(uint amount) public pure returns(uint burn){... */\n    tag_22:\n      tag_44\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_23:\n      tag_44\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_113\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1052:1149  function updateCode(address newCode) onlyOwner public {... */\n    tag_64:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":599:604  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"Upgradable E1P 1822/Implementation1.sol\":608:618  msg.sender */\n      caller\n        /* \"Upgradable E1P 1822/Implementation1.sol\":599:618  owner == msg.sender */\n      eq\n        /* \"Upgradable E1P 1822/Implementation1.sol\":591:652  require(owner == msg.sender, \"No permission except to owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4414:4416   */\n      0x20\n        /* \"Upgradable E1P 1822/Implementation1.sol\":591:652  require(owner == msg.sender, \"No permission except to owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4396:4417   */\n      mstore\n        /* \"#utility.yul\":4453:4455   */\n      0x1d\n        /* \"#utility.yul\":4433:4451   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4426:4456   */\n      mstore\n        /* \"#utility.yul\":4492:4523   */\n      0x4e6f207065726d697373696f6e2065786365707420746f206f776e6572000000\n        /* \"#utility.yul\":4472:4490   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4465:4524   */\n      mstore\n        /* \"#utility.yul\":4541:4559   */\n      0x64\n      add\n        /* \"Upgradable E1P 1822/Implementation1.sol\":591:652  require(owner == msg.sender, \"No permission except to owner\") */\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1116:1142  updateCodeAddress(newCode) */\n      tag_143\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1134:1141  newCode */\n      dup2\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1116:1133  updateCodeAddress */\n      tag_144\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1116:1142  updateCodeAddress(newCode) */\n      jump\t// in\n    tag_143:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1052:1149  function updateCode(address newCode) onlyOwner public {... */\n      pop\n      jump\t// out\n        /* \"Upgradable E1P 1822/Implementation1.sol\":681:833  function initialize() public {... */\n    tag_77:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":728:733  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"Upgradable E1P 1822/Implementation1.sol\":728:747  owner == address(0) */\n      iszero\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4772:4774   */\n      0x20\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4754:4775   */\n      mstore\n        /* \"#utility.yul\":4811:4813   */\n      0x12\n        /* \"#utility.yul\":4791:4809   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4784:4814   */\n      mstore\n      shl(0x72, 0x105b1c9958591e481a5b9a5d185b1a5e9959)\n        /* \"#utility.yul\":4830:4848   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4823:4871   */\n      mstore\n        /* \"#utility.yul\":4888:4906   */\n      0x64\n      add\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n      tag_140\n        /* \"#utility.yul\":4570:4912   */\n      jump\n        /* \"Upgradable E1P 1822/Implementation1.sol\":720:770  require(owner == address(0), \"Already initalized\") */\n    tag_148:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":780:785  owner */\n      0x07\n        /* \"Upgradable E1P 1822/Implementation1.sol\":780:798  owner = msg.sender */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n        /* \"Upgradable E1P 1822/Implementation1.sol\":788:798  msg.sender */\n      caller\n        /* \"Upgradable E1P 1822/Implementation1.sol\":808:826  initialized = true */\n      and\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"Upgradable E1P 1822/Implementation1.sol\":681:833  function initialize() public {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n    tag_88:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1023:1041  _mint(_to, amount) */\n      tag_158\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1029:1032  _to */\n      dup2\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1034:1040  amount */\n      dup4\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1023:1028  _mint */\n      tag_159\n        /* \"Upgradable E1P 1822/Implementation1.sol\":1023:1041  _mint(_to, amount) */\n      jump\t// in\n    tag_158:\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_162\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5119:5121   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5101:5122   */\n      mstore\n        /* \"#utility.yul\":5158:5160   */\n      0x25\n        /* \"#utility.yul\":5138:5156   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5131:5161   */\n      mstore\n        /* \"#utility.yul\":5197:5231   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5177:5195   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5170:5232   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5248:5266   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5241:5276   */\n      mstore\n        /* \"#utility.yul\":5293:5312   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_140\n        /* \"#utility.yul\":4917:5318   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"Upgradable E1P 1822/Implementation2.sol\":326:431  function calculateBurn(uint amount) public pure returns(uint burn){... */\n    tag_104:\n        /* \"Upgradable E1P 1822/Implementation2.sol\":382:391  uint burn */\n      0x00\n        /* \"Upgradable E1P 1822/Implementation2.sol\":421:424  100 */\n      0x64\n        /* \"Upgradable E1P 1822/Implementation2.sol\":408:419  amount * 10 */\n      tag_171\n        /* \"Upgradable E1P 1822/Implementation2.sol\":408:414  amount */\n      dup4\n        /* \"Upgradable E1P 1822/Implementation2.sol\":417:419  10 */\n      0x0a\n        /* \"Upgradable E1P 1822/Implementation2.sol\":408:419  amount * 10 */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"Upgradable E1P 1822/Implementation2.sol\":407:424  (amount * 10)/100 */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"Upgradable E1P 1822/Implementation2.sol\":400:424  burn = (amount * 10)/100 */\n      swap3\n        /* \"Upgradable E1P 1822/Implementation2.sol\":326:431  function calculateBurn(uint amount) public pure returns(uint burn){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5920:5922   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5902:5923   */\n      mstore\n        /* \"#utility.yul\":5959:5961   */\n      0x24\n        /* \"#utility.yul\":5939:5957   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5932:5962   */\n      mstore\n        /* \"#utility.yul\":5998:6032   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5978:5996   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5971:6033   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6049:6067   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6042:6076   */\n      mstore\n        /* \"#utility.yul\":6093:6112   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_140\n        /* \"#utility.yul\":5718:6118   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6325:6327   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6307:6328   */\n      mstore\n        /* \"#utility.yul\":6364:6366   */\n      0x22\n        /* \"#utility.yul\":6344:6362   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6337:6367   */\n      mstore\n        /* \"#utility.yul\":6403:6437   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":6383:6401   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6376:6438   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":6454:6472   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6447:6479   */\n      mstore\n        /* \"#utility.yul\":6496:6515   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_140\n        /* \"#utility.yul\":6123:6521   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1714:1739   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_186\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_191\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6728:6730   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6710:6731   */\n      mstore\n        /* \"#utility.yul\":6767:6769   */\n      0x1d\n        /* \"#utility.yul\":6747:6765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6740:6770   */\n      mstore\n        /* \"#utility.yul\":6806:6837   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":6786:6804   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6779:6838   */\n      mstore\n        /* \"#utility.yul\":6855:6873   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_140\n        /* \"#utility.yul\":6526:6879   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7086:7088   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7068:7089   */\n      mstore\n        /* \"#utility.yul\":7125:7127   */\n      0x25\n        /* \"#utility.yul\":7105:7123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7098:7128   */\n      mstore\n        /* \"#utility.yul\":7164:7198   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":7144:7162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7137:7199   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":7215:7233   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7208:7243   */\n      mstore\n        /* \"#utility.yul\":7260:7279   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_140\n        /* \"#utility.yul\":6884:7285   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7492:7494   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7474:7495   */\n      mstore\n        /* \"#utility.yul\":7531:7533   */\n      0x23\n        /* \"#utility.yul\":7511:7529   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7504:7534   */\n      mstore\n        /* \"#utility.yul\":7570:7604   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7550:7568   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7543:7605   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7621:7639   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7614:7647   */\n      mstore\n        /* \"#utility.yul\":7664:7683   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_140\n        /* \"#utility.yul\":7290:7689   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7896:7898   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7878:7899   */\n      mstore\n        /* \"#utility.yul\":7935:7937   */\n      0x26\n        /* \"#utility.yul\":7915:7933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7908:7938   */\n      mstore\n        /* \"#utility.yul\":7974:8008   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7954:7972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7947:8009   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8025:8043   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8018:8054   */\n      mstore\n        /* \"#utility.yul\":8071:8090   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_140\n        /* \"#utility.yul\":7694:8096   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1714:1739   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n      jump\n        /* \"Upgradable E1P 1822/Proxible.sol\":220:621  function updateCodeAddress(address newAddress) internal {... */\n    tag_144:\n        /* \"Upgradable E1P 1822/Proxible.sol\":396:406  newAddress */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Upgradable E1P 1822/Proxible.sol\":386:421  Proxiable(newAddress).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"Upgradable E1P 1822/Proxible.sol\":386:423  Proxiable(newAddress).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"Upgradable E1P 1822/Proxible.sol\":315:381  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":307:423  bytes32(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7) == Proxiable(newAddress).proxiableUUID() */\n      eq\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8492:8494   */\n      0x20\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8474:8495   */\n      mstore\n        /* \"#utility.yul\":8531:8533   */\n      0x0e\n        /* \"#utility.yul\":8511:8529   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8504:8534   */\n      mstore\n      shl(0x90, 0x4e6f7420636f6d70617469626c65)\n        /* \"#utility.yul\":8550:8568   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8543:8587   */\n      mstore\n        /* \"#utility.yul\":8604:8622   */\n      0x64\n      add\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n      tag_140\n        /* \"#utility.yul\":8290:8628   */\n      jump\n        /* \"Upgradable E1P 1822/Proxible.sol\":286:463  require(... */\n    tag_212:\n        /* \"Upgradable E1P 1822/Proxible.sol\":526:592  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":519:605  sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, newAddress) */\n      sstore\n        /* \"Upgradable E1P 1822/Proxible.sol\":220:621  function updateCodeAddress(address newAddress) internal {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8835:8837   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8817:8838   */\n      mstore\n        /* \"#utility.yul\":8874:8876   */\n      0x1f\n        /* \"#utility.yul\":8854:8872   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8847:8877   */\n      mstore\n        /* \"#utility.yul\":8913:8946   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":8893:8911   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8886:8947   */\n      mstore\n        /* \"#utility.yul\":8964:8982   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_140\n        /* \"#utility.yul\":8633:8988   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8794:8800  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8778:8790  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8778:8800  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_220\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_220:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8955  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8946:8974  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1714:1739   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Upgradable E1P 1822/Implementation1.sol\":962:1048  function mintToken(uint amount, address _to) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:486   */\n    tag_225:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_230:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_230)\n    tag_232:\n        /* \"#utility.yul\":336:342   */\n      dup2\n        /* \"#utility.yul\":333:334   */\n      dup2\n        /* \"#utility.yul\":330:343   */\n      gt\n        /* \"#utility.yul\":327:414   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":402:403   */\n      0x00\n        /* \"#utility.yul\":395:399   */\n      0x20\n        /* \"#utility.yul\":386:392   */\n      dup4\n        /* \"#utility.yul\":381:384   */\n      dup8\n        /* \"#utility.yul\":377:393   */\n      add\n        /* \"#utility.yul\":373:400   */\n      add\n        /* \"#utility.yul\":366:404   */\n      mstore\n        /* \"#utility.yul\":327:414   */\n    tag_233:\n      pop\n        /* \"#utility.yul\":468:470   */\n      0x1f\n        /* \"#utility.yul\":447:462   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":443:472   */\n      and\n        /* \"#utility.yul\":434:473   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":475:479   */\n      0x20\n        /* \"#utility.yul\":430:480   */\n      add\n      swap3\n        /* \"#utility.yul\":14:486   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":491:711   */\n    tag_30:\n        /* \"#utility.yul\":640:642   */\n      0x20\n        /* \"#utility.yul\":629:638   */\n      dup2\n        /* \"#utility.yul\":622:643   */\n      mstore\n        /* \"#utility.yul\":603:607   */\n      0x00\n        /* \"#utility.yul\":660:705   */\n      tag_235\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":690:699   */\n      dup4\n        /* \"#utility.yul\":686:704   */\n      add\n        /* \"#utility.yul\":678:684   */\n      dup5\n        /* \"#utility.yul\":660:705   */\n      tag_225\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":652:705   */\n      swap4\n        /* \"#utility.yul\":491:711   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":716:889   */\n    tag_226:\n        /* \"#utility.yul\":784:804   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":833:864   */\n      dup2\n      and\n        /* \"#utility.yul\":823:865   */\n      dup2\n      eq\n        /* \"#utility.yul\":813:883   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":879:880   */\n      0x00\n        /* \"#utility.yul\":876:877   */\n      dup1\n        /* \"#utility.yul\":869:881   */\n      revert\n        /* \"#utility.yul\":813:883   */\n    tag_237:\n        /* \"#utility.yul\":716:889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":894:1148   */\n    tag_33:\n        /* \"#utility.yul\":962:968   */\n      0x00\n        /* \"#utility.yul\":970:976   */\n      dup1\n        /* \"#utility.yul\":1023:1025   */\n      0x40\n        /* \"#utility.yul\":1011:1020   */\n      dup4\n        /* \"#utility.yul\":1002:1009   */\n      dup6\n        /* \"#utility.yul\":998:1021   */\n      sub\n        /* \"#utility.yul\":994:1026   */\n      slt\n        /* \"#utility.yul\":991:1043   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1039:1040   */\n      0x00\n        /* \"#utility.yul\":1036:1037   */\n      dup1\n        /* \"#utility.yul\":1029:1041   */\n      revert\n        /* \"#utility.yul\":991:1043   */\n    tag_239:\n        /* \"#utility.yul\":1062:1091   */\n      tag_240\n        /* \"#utility.yul\":1081:1090   */\n      dup4\n        /* \"#utility.yul\":1062:1091   */\n      tag_226\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1052:1091   */\n      swap5\n        /* \"#utility.yul\":1138:1140   */\n      0x20\n        /* \"#utility.yul\":1123:1141   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1110:1142   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":894:1148   */\n      jump\t// out\n        /* \"#utility.yul\":1750:2078   */\n    tag_50:\n        /* \"#utility.yul\":1827:1833   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup1\n        /* \"#utility.yul\":1843:1849   */\n      0x00\n        /* \"#utility.yul\":1896:1898   */\n      0x60\n        /* \"#utility.yul\":1884:1893   */\n      dup5\n        /* \"#utility.yul\":1875:1882   */\n      dup7\n        /* \"#utility.yul\":1871:1894   */\n      sub\n        /* \"#utility.yul\":1867:1899   */\n      slt\n        /* \"#utility.yul\":1864:1916   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      dup1\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1864:1916   */\n    tag_246:\n        /* \"#utility.yul\":1935:1964   */\n      tag_247\n        /* \"#utility.yul\":1954:1963   */\n      dup5\n        /* \"#utility.yul\":1935:1964   */\n      tag_226\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1925:1964   */\n      swap3\n      pop\n        /* \"#utility.yul\":1983:2021   */\n      tag_248\n        /* \"#utility.yul\":2017:2019   */\n      0x20\n        /* \"#utility.yul\":2006:2015   */\n      dup6\n        /* \"#utility.yul\":2002:2020   */\n      add\n        /* \"#utility.yul\":1983:2021   */\n      tag_226\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1973:2021   */\n      swap2\n      pop\n        /* \"#utility.yul\":2068:2070   */\n      0x40\n        /* \"#utility.yul\":2057:2066   */\n      dup5\n        /* \"#utility.yul\":2053:2071   */\n      add\n        /* \"#utility.yul\":2040:2072   */\n      calldataload\n        /* \"#utility.yul\":2030:2072   */\n      swap1\n      pop\n        /* \"#utility.yul\":1750:2078   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2272:2458   */\n    tag_63:\n        /* \"#utility.yul\":2331:2337   */\n      0x00\n        /* \"#utility.yul\":2384:2386   */\n      0x20\n        /* \"#utility.yul\":2372:2381   */\n      dup3\n        /* \"#utility.yul\":2363:2370   */\n      dup5\n        /* \"#utility.yul\":2359:2382   */\n      sub\n        /* \"#utility.yul\":2355:2387   */\n      slt\n        /* \"#utility.yul\":2352:2404   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2400:2401   */\n      0x00\n        /* \"#utility.yul\":2397:2398   */\n      dup1\n        /* \"#utility.yul\":2390:2402   */\n      revert\n        /* \"#utility.yul\":2352:2404   */\n    tag_251:\n        /* \"#utility.yul\":2423:2452   */\n      tag_235\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2423:2452   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":2853:3107   */\n    tag_87:\n        /* \"#utility.yul\":2921:2927   */\n      0x00\n        /* \"#utility.yul\":2929:2935   */\n      dup1\n        /* \"#utility.yul\":2982:2984   */\n      0x40\n        /* \"#utility.yul\":2970:2979   */\n      dup4\n        /* \"#utility.yul\":2961:2968   */\n      dup6\n        /* \"#utility.yul\":2957:2980   */\n      sub\n        /* \"#utility.yul\":2953:2985   */\n      slt\n        /* \"#utility.yul\":2950:3002   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2995:2996   */\n      dup1\n        /* \"#utility.yul\":2988:3000   */\n      revert\n        /* \"#utility.yul\":2950:3002   */\n    tag_256:\n        /* \"#utility.yul\":3034:3043   */\n      dup3\n        /* \"#utility.yul\":3021:3044   */\n      calldataload\n        /* \"#utility.yul\":3011:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":3063:3101   */\n      tag_257\n        /* \"#utility.yul\":3097:3099   */\n      0x20\n        /* \"#utility.yul\":3086:3095   */\n      dup5\n        /* \"#utility.yul\":3082:3100   */\n      add\n        /* \"#utility.yul\":3063:3101   */\n      tag_226\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3053:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2853:3107   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3112:3292   */\n    tag_103:\n        /* \"#utility.yul\":3171:3177   */\n      0x00\n        /* \"#utility.yul\":3224:3226   */\n      0x20\n        /* \"#utility.yul\":3212:3221   */\n      dup3\n        /* \"#utility.yul\":3203:3210   */\n      dup5\n        /* \"#utility.yul\":3199:3222   */\n      sub\n        /* \"#utility.yul\":3195:3227   */\n      slt\n        /* \"#utility.yul\":3192:3244   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3240:3241   */\n      0x00\n        /* \"#utility.yul\":3237:3238   */\n      dup1\n        /* \"#utility.yul\":3230:3242   */\n      revert\n        /* \"#utility.yul\":3192:3244   */\n    tag_259:\n      pop\n        /* \"#utility.yul\":3263:3286   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3112:3292   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3297:3557   */\n    tag_108:\n        /* \"#utility.yul\":3365:3371   */\n      0x00\n        /* \"#utility.yul\":3373:3379   */\n      dup1\n        /* \"#utility.yul\":3426:3428   */\n      0x40\n        /* \"#utility.yul\":3414:3423   */\n      dup4\n        /* \"#utility.yul\":3405:3412   */\n      dup6\n        /* \"#utility.yul\":3401:3424   */\n      sub\n        /* \"#utility.yul\":3397:3429   */\n      slt\n        /* \"#utility.yul\":3394:3446   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3442:3443   */\n      0x00\n        /* \"#utility.yul\":3439:3440   */\n      dup1\n        /* \"#utility.yul\":3432:3444   */\n      revert\n        /* \"#utility.yul\":3394:3446   */\n    tag_261:\n        /* \"#utility.yul\":3465:3494   */\n      tag_262\n        /* \"#utility.yul\":3484:3493   */\n      dup4\n        /* \"#utility.yul\":3465:3494   */\n      tag_226\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3455:3494   */\n      swap2\n      pop\n        /* \"#utility.yul\":3513:3551   */\n      tag_257\n        /* \"#utility.yul\":3547:3549   */\n      0x20\n        /* \"#utility.yul\":3536:3545   */\n      dup5\n        /* \"#utility.yul\":3532:3550   */\n      add\n        /* \"#utility.yul\":3513:3551   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":3562:3942   */\n    tag_113:\n        /* \"#utility.yul\":3641:3642   */\n      0x01\n        /* \"#utility.yul\":3637:3649   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3684:3696   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3705:3766   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3759:3763   */\n      0x7f\n        /* \"#utility.yul\":3751:3757   */\n      dup3\n        /* \"#utility.yul\":3747:3764   */\n      and\n        /* \"#utility.yul\":3737:3764   */\n      swap2\n      pop\n        /* \"#utility.yul\":3705:3766   */\n    tag_265:\n        /* \"#utility.yul\":3812:3814   */\n      0x20\n        /* \"#utility.yul\":3804:3810   */\n      dup3\n        /* \"#utility.yul\":3801:3815   */\n      lt\n        /* \"#utility.yul\":3781:3799   */\n      dup2\n        /* \"#utility.yul\":3778:3816   */\n      eq\n        /* \"#utility.yul\":3775:3936   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3858:3868   */\n      0x4e487b71\n        /* \"#utility.yul\":3853:3856   */\n      0xe0\n        /* \"#utility.yul\":3849:3869   */\n      shl\n        /* \"#utility.yul\":3846:3847   */\n      0x00\n        /* \"#utility.yul\":3839:3870   */\n      mstore\n        /* \"#utility.yul\":3893:3897   */\n      0x22\n        /* \"#utility.yul\":3890:3891   */\n      0x04\n        /* \"#utility.yul\":3883:3898   */\n      mstore\n        /* \"#utility.yul\":3921:3925   */\n      0x24\n        /* \"#utility.yul\":3918:3919   */\n      0x00\n        /* \"#utility.yul\":3911:3926   */\n      revert\n        /* \"#utility.yul\":3775:3936   */\n    tag_266:\n      pop\n        /* \"#utility.yul\":3562:3942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3947:4074   */\n    tag_227:\n        /* \"#utility.yul\":4008:4018   */\n      0x4e487b71\n        /* \"#utility.yul\":4003:4006   */\n      0xe0\n        /* \"#utility.yul\":3999:4019   */\n      shl\n        /* \"#utility.yul\":3996:3997   */\n      0x00\n        /* \"#utility.yul\":3989:4020   */\n      mstore\n        /* \"#utility.yul\":4039:4043   */\n      0x11\n        /* \"#utility.yul\":4036:4037   */\n      0x04\n        /* \"#utility.yul\":4029:4044   */\n      mstore\n        /* \"#utility.yul\":4063:4067   */\n      0x24\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4053:4068   */\n      revert\n        /* \"#utility.yul\":4079:4207   */\n    tag_137:\n        /* \"#utility.yul\":4119:4122   */\n      0x00\n        /* \"#utility.yul\":4150:4151   */\n      dup3\n        /* \"#utility.yul\":4146:4152   */\n      not\n        /* \"#utility.yul\":4143:4144   */\n      dup3\n        /* \"#utility.yul\":4140:4153   */\n      gt\n        /* \"#utility.yul\":4137:4176   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4156:4174   */\n      tag_270\n      tag_227\n      jump\t// in\n    tag_270:\n      pop\n        /* \"#utility.yul\":4192:4201   */\n      add\n      swap1\n        /* \"#utility.yul\":4079:4207   */\n      jump\t// out\n        /* \"#utility.yul\":5323:5491   */\n    tag_172:\n        /* \"#utility.yul\":5363:5370   */\n      0x00\n        /* \"#utility.yul\":5429:5430   */\n      dup2\n        /* \"#utility.yul\":5425:5426   */\n      0x00\n        /* \"#utility.yul\":5421:5427   */\n      not\n        /* \"#utility.yul\":5417:5431   */\n      div\n        /* \"#utility.yul\":5414:5415   */\n      dup4\n        /* \"#utility.yul\":5411:5432   */\n      gt\n        /* \"#utility.yul\":5406:5407   */\n      dup3\n        /* \"#utility.yul\":5399:5408   */\n      iszero\n        /* \"#utility.yul\":5392:5409   */\n      iszero\n        /* \"#utility.yul\":5388:5433   */\n      and\n        /* \"#utility.yul\":5385:5456   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5436:5454   */\n      tag_276\n      tag_227\n      jump\t// in\n    tag_276:\n      pop\n        /* \"#utility.yul\":5476:5485   */\n      mul\n      swap1\n        /* \"#utility.yul\":5323:5491   */\n      jump\t// out\n        /* \"#utility.yul\":5496:5713   */\n    tag_174:\n        /* \"#utility.yul\":5536:5537   */\n      0x00\n        /* \"#utility.yul\":5562:5563   */\n      dup3\n        /* \"#utility.yul\":5552:5684   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":5606:5616   */\n      0x4e487b71\n        /* \"#utility.yul\":5601:5604   */\n      0xe0\n        /* \"#utility.yul\":5597:5617   */\n      shl\n        /* \"#utility.yul\":5594:5595   */\n      0x00\n        /* \"#utility.yul\":5587:5618   */\n      mstore\n        /* \"#utility.yul\":5641:5645   */\n      0x12\n        /* \"#utility.yul\":5638:5639   */\n      0x04\n        /* \"#utility.yul\":5631:5646   */\n      mstore\n        /* \"#utility.yul\":5669:5673   */\n      0x24\n        /* \"#utility.yul\":5666:5667   */\n      0x00\n        /* \"#utility.yul\":5659:5674   */\n      revert\n        /* \"#utility.yul\":5552:5684   */\n    tag_278:\n      pop\n        /* \"#utility.yul\":5698:5707   */\n      div\n      swap1\n        /* \"#utility.yul\":5496:5713   */\n      jump\t// out\n        /* \"#utility.yul\":8101:8285   */\n    tag_211:\n        /* \"#utility.yul\":8171:8177   */\n      0x00\n        /* \"#utility.yul\":8224:8226   */\n      0x20\n        /* \"#utility.yul\":8212:8221   */\n      dup3\n        /* \"#utility.yul\":8203:8210   */\n      dup5\n        /* \"#utility.yul\":8199:8222   */\n      sub\n        /* \"#utility.yul\":8195:8227   */\n      slt\n        /* \"#utility.yul\":8192:8244   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":8240:8241   */\n      0x00\n        /* \"#utility.yul\":8237:8238   */\n      dup1\n        /* \"#utility.yul\":8230:8242   */\n      revert\n        /* \"#utility.yul\":8192:8244   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":8263:8279   */\n      mload\n      swap2\n        /* \"#utility.yul\":8101:8285   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122088b481bfe6ffd8fe95bccce7cda0112dcf5b73df2e1474d8ab719b9d77abeacd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:7"
															},
															"nodeType": "YulIf",
															"src": "157:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:7"
															},
															"nodeType": "YulIf",
															"src": "227:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:7",
														"type": ""
													}
												],
												"src": "14:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006006556007805460ff60a01b191690553480156200002a57600080fd5b50604080518082018252600881526722a4a816989c191960c11b6020808301918252835180850190945260048452634549504960e01b908401528151919291620000779160039162000096565b5080516200008d90600490602084019062000096565b50505062000179565b828054620000a4906200013c565b90600052602060002090601f016020900481019282620000c8576000855562000113565b82601f10620000e357805160ff191683800117855562000113565b8280016001018555821562000113579182015b8281111562000113578251825591602001919060010190620000f6565b506200012192915062000125565b5090565b5b8082111562000121576000815560010162000126565b600181811c908216806200015157607f821691505b602082108114156200017357634e487b7160e01b600052602260045260246000fd5b50919050565b610d3c80620001896000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a140ae231161007c578063a140ae23146102af578063a457c2d7146102c2578063a9059cbb146102d5578063d3aceae2146102e8578063dc287c7e14610308578063dd62ed3e1461031b57600080fd5b806370a082311461024257806376809ce31461026b5780638129fc1c146102745780638da5cb5b1461027c57806395d89b41146102a757600080fd5b806323b872dd116100ff57806323b872dd146101d2578063313ce567146101e557806339509351146101f4578063469519541461020757806352d1902d1461021c57600080fd5b806306fdde031461013c578063095ea7b31461015a57806311d7fe4d1461017d578063158ef93e146101ac57806318160ddd146101c0575b600080fd5b61014461032e565b6040516101519190610b1d565b60405180910390f35b61016d610168366004610b53565b6103c0565b6040519015158152602001610151565b6101446040805160048152602481019091526020810180516001600160e01b031663204a7f0760e21b17905290565b60075461016d90600160a01b900460ff1681565b6002545b604051908152602001610151565b61016d6101e0366004610b7d565b6103d8565b60405160128152602001610151565b61016d610202366004610b53565b6103fc565b61021a610215366004610bb9565b61041e565b005b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf76101c4565b6101c4610250366004610bb9565b6001600160a01b031660009081526020819052604090205490565b6101c460065481565b61021a610489565b60075461028f906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6101446104fa565b61021a6102bd366004610bd4565b610509565b61016d6102d0366004610b53565b610517565b61016d6102e3366004610b53565b610592565b6101c46102f6366004610bb9565b60086020526000908152604090205481565b6101c4610316366004610c00565b6105a0565b6101c4610329366004610c19565b6105bf565b60606003805461033d90610c43565b80601f016020809104026020016040519081016040528092919081815260200182805461036990610c43565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050905090565b6000336103ce8185856105ea565b5060019392505050565b6000336103e685828561070e565b6103f1858585610788565b506001949350505050565b6000336103ce81858561040f83836105bf565b6104199190610c94565b6105ea565b6007546001600160a01b0316331461047d5760405162461bcd60e51b815260206004820152601d60248201527f4e6f207065726d697373696f6e2065786365707420746f206f776e657200000060448201526064015b60405180910390fd5b6104868161092c565b50565b6007546001600160a01b0316156104d75760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a5b9a5d185b1a5e995960721b6044820152606401610474565b6007805460ff60a01b1933166001600160a81b031990911617600160a01b179055565b60606004805461033d90610c43565b6105138183610a11565b5050565b6000338161052582866105bf565b9050838110156105855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610474565b6103f182868684036105ea565b6000336103ce818585610788565b600060646105af83600a610cac565b6105b99190610ccb565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661064c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610474565b6001600160a01b0382166106ad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610474565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061071a84846105bf565b9050600019811461078257818110156107755760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610474565b61078284848484036105ea565b50505050565b6001600160a01b0383166107ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610474565b6001600160a01b03821661084e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610474565b6001600160a01b038316600090815260208190526040902054818110156108c65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610474565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610782565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190610ced565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7146109ed5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420636f6d70617469626c6560901b6044820152606401610474565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b6001600160a01b038216610a675760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610474565b8060026000828254610a799190610c94565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b81811015610af657602081850181015186830182015201610ada565b81811115610b08576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b306020830184610ad0565b9392505050565b80356001600160a01b0381168114610b4e57600080fd5b919050565b60008060408385031215610b6657600080fd5b610b6f83610b37565b946020939093013593505050565b600080600060608486031215610b9257600080fd5b610b9b84610b37565b9250610ba960208501610b37565b9150604084013590509250925092565b600060208284031215610bcb57600080fd5b610b3082610b37565b60008060408385031215610be757600080fd5b82359150610bf760208401610b37565b90509250929050565b600060208284031215610c1257600080fd5b5035919050565b60008060408385031215610c2c57600080fd5b610c3583610b37565b9150610bf760208401610b37565b600181811c90821680610c5757607f821691505b60208210811415610c7857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ca757610ca7610c7e565b500190565b6000816000190483118215151615610cc657610cc6610c7e565b500290565b600082610ce857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610cff57600080fd5b505191905056fea264697066735822122088b481bfe6ffd8fe95bccce7cda0112dcf5b73df2e1474d8ab719b9d77abeacd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x22A4A816989C1919 PUSH1 0xC1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x45495049 PUSH1 0xE0 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x77 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x96 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x8D SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x96 JUMP JUMPDEST POP POP POP PUSH3 0x179 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xA4 SWAP1 PUSH3 0x13C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xC8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x113 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xE3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x113 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x113 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x113 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xF6 JUMP JUMPDEST POP PUSH3 0x121 SWAP3 SWAP2 POP PUSH3 0x125 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x126 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x151 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x173 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3C DUP1 PUSH3 0x189 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA140AE23 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA140AE23 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xDC287C7E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x46951954 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x11D7FE4D EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x144 PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x204A7F07 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x489 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x21A PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x33D SWAP1 PUSH2 0xC43 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xC43 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x399 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3E6 DUP6 DUP3 DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x3F1 DUP6 DUP6 DUP6 PUSH2 0x788 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x40F DUP4 DUP4 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207065726D697373696F6E2065786365707420746F206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x486 DUP2 PUSH2 0x92C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481A5B9A5D185B1A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT CALLER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x33D SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x513 DUP2 DUP4 PUSH2 0xA11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x525 DUP3 DUP7 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x3F1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x5AF DUP4 PUSH1 0xA PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0xCCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP5 DUP5 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x782 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x782 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x782 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F7420636F6D70617469626C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xADA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB08 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB30 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6F DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9B DUP5 PUSH2 0xB37 JUMP JUMPDEST SWAP3 POP PUSH2 0xBA9 PUSH1 0x20 DUP6 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB30 DUP3 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xBF7 PUSH1 0x20 DUP5 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC35 DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF7 PUSH1 0x20 DUP5 ADD PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0xC7E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCC6 JUMPI PUSH2 0xCC6 PUSH2 0xC7E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCE8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB4 DUP2 0xBF 0xE6 SELFDESTRUCT 0xD8 INVALID SWAP6 0xBC 0xCC 0xE7 0xCD LOG0 GT 0x2D 0xCF JUMPDEST PUSH20 0xDF2E1474D8AB719B9D77ABEACD64736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "98:338:1:-:0;;;326:4:0;304:26;;362:31;;;-1:-1:-1;;;;362:31:0;;;98:338:1;;;;;;;;;-1:-1:-1;1976:113:3;;;;;;;;;;;-1:-1:-1;;;1976:113:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:3;;;;2042:13;;1976:113;;;2042:13;;:5;;:13;:::i;:::-;-1:-1:-1;2065:17:3;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;98:338:1;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;98:338:1;;;-1:-1:-1;98:338:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:7;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;98:338:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_762": {
									"entryPoint": null,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_697": {
									"entryPoint": 1514,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_balance_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_751": {
									"entryPoint": null,
									"id": 751,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_580": {
									"entryPoint": 2577,
									"id": 580,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_878": {
									"entryPoint": null,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_740": {
									"entryPoint": 1806,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_523": {
									"entryPoint": 1928,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_318": {
									"entryPoint": 1471,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_343": {
									"entryPoint": 960,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateBurn_143": {
									"entryPoint": 1440,
									"id": 143,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimal_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_251": {
									"entryPoint": null,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_446": {
									"entryPoint": 1303,
									"id": 446,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@encodeer_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_405": {
									"entryPoint": 1020,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_64": {
									"entryPoint": 1161,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialized_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintToken_88": {
									"entryPoint": 1289,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_231": {
									"entryPoint": 814,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_241": {
									"entryPoint": 1274,
									"id": 241,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_376": {
									"entryPoint": 984,
									"id": 376,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_300": {
									"entryPoint": 1426,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateCodeAddress_167": {
									"entryPoint": 2348,
									"id": 167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCode_100": {
									"entryPoint": 1054,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8990:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "64:422:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "78:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "109:19:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "146:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "141:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "208:110:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "232:4:7",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "226:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:7"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "164:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "178:21:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "180:17:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "160:3:7",
																"statements": []
															},
															"src": "156:162:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "352:62:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "381:3:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "386:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "377:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "377:16:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "395:4:7",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "373:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "373:27:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "366:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "366:38:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "366:38:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "333:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "336:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "330:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:13:7"
															},
															"nodeType": "YulIf",
															"src": "327:87:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "423:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "438:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "451:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "459:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "447:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "468:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "464:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "464:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "443:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "443:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "434:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "434:39:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "430:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "423:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "48:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:7",
														"type": ""
													}
												],
												"src": "14:472:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "629:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "652:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "701:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "686:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "652:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "581:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "592:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "603:4:7",
														"type": ""
													}
												],
												"src": "491:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "775:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "797:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "784:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "775:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "867:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "876:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "869:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "869:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "869:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "826:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "837:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "852:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "857:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "848:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "848:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "861:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "844:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "844:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "833:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "833:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "823:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "823:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:50:7"
															},
															"nodeType": "YulIf",
															"src": "813:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "744:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "755:5:7",
														"type": ""
													}
												],
												"src": "716:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1027:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1039:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1029:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1029:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1029:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1002:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1011:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1023:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "994:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:32:7"
															},
															"nodeType": "YulIf",
															"src": "991:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1062:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1100:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1127:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1138:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1110:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "939:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "950:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "962:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "970:6:7",
														"type": ""
													}
												],
												"src": "894:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1248:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1258:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1270:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1266:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1258:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1300:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1325:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1318:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1318:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1311:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1217:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1239:4:7",
														"type": ""
													}
												],
												"src": "1153:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1464:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1481:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1474:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1504:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1553:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1512:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1504:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1433:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1444:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1455:4:7",
														"type": ""
													}
												],
												"src": "1345:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1679:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1721:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1732:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1714:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1638:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1649:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1660:4:7",
														"type": ""
													}
												],
												"src": "1568:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1854:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1900:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1875:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1884:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1896:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:32:7"
															},
															"nodeType": "YulIf",
															"src": "1864:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1925:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1935:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1973:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2017:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1983:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2030:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2057:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2068:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2053:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2040:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1804:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1815:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1827:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1835:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1843:6:7",
														"type": ""
													}
												],
												"src": "1750:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2180:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2190:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2202:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2190:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2232:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2255:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2243:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2149:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2160:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2171:4:7",
														"type": ""
													}
												],
												"src": "2083:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2342:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2388:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2397:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2400:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2390:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2390:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2390:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2363:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2372:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2355:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:32:7"
															},
															"nodeType": "YulIf",
															"src": "2352:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2413:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2423:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2308:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2319:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2331:6:7",
														"type": ""
													}
												],
												"src": "2272:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2564:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2574:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2586:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2574:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2616:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2609:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2555:4:7",
														"type": ""
													}
												],
												"src": "2463:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2746:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2756:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2798:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2813:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2829:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2834:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2825:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2825:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2838:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2821:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2791:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2715:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2726:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2737:4:7",
														"type": ""
													}
												],
												"src": "2645:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2986:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2995:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2998:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2988:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2988:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2961:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2970:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:32:7"
															},
															"nodeType": "YulIf",
															"src": "2950:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3011:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3034:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3021:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3011:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3053:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3086:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3097:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3063:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3053:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2898:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2909:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2921:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2929:6:7",
														"type": ""
													}
												],
												"src": "2853:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3228:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3237:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3240:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3230:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3230:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3230:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3212:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3224:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3195:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:32:7"
															},
															"nodeType": "YulIf",
															"src": "3192:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3253:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3276:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3263:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3148:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3159:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3171:6:7",
														"type": ""
													}
												],
												"src": "3112:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3384:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3430:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3439:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3442:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3432:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3432:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3432:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3405:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3414:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:32:7"
															},
															"nodeType": "YulIf",
															"src": "3394:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3455:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3465:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3503:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3536:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3532:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3513:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3353:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3365:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3373:6:7",
														"type": ""
													}
												],
												"src": "3297:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3617:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3627:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3641:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3644:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3658:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3688:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3694:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3662:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3735:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3737:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3751:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3759:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3747:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3747:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3715:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:26:7"
															},
															"nodeType": "YulIf",
															"src": "3705:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3825:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3846:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3853:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3858:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3849:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3849:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3839:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3890:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3893:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3883:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3883:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3883:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3918:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3921:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3911:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3911:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3911:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3781:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3804:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3812:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3801:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3778:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:38:7"
															},
															"nodeType": "YulIf",
															"src": "3775:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3597:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3606:6:7",
														"type": ""
													}
												],
												"src": "3562:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3979:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3996:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4008:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3989:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3989:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3989:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4039:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4029:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4029:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4063:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3947:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4127:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4154:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4156:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4156:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4156:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4143:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4150:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4146:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4140:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4140:13:7"
															},
															"nodeType": "YulIf",
															"src": "4137:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4185:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4196:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4199:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4192:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4185:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4110:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4113:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4119:3:7",
														"type": ""
													}
												],
												"src": "4079:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4386:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4403:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4414:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4437:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4448:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4433:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4433:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4426:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4426:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4487:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:18:7"
																	},
																	{
																		"hexValue": "4e6f207065726d697373696f6e2065786365707420746f206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4492:31:7",
																		"type": "",
																		"value": "No permission except to owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4533:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4545:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4533:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4363:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4377:4:7",
														"type": ""
													}
												],
												"src": "4212:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4744:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4761:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4772:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4795:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4806:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4791:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4791:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4811:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4784:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4784:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4834:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4845:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4830:18:7"
																	},
																	{
																		"hexValue": "416c726561647920696e6974616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4850:20:7",
																		"type": "",
																		"value": "Already initalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4823:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4880:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4892:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4888:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4880:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4721:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4735:4:7",
														"type": ""
													}
												],
												"src": "4570:342:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5091:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5108:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5101:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5101:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5101:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5142:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5153:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5138:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5131:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5181:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5192:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5177:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5197:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5170:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5268:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5285:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5297:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5308:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5285:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5068:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5082:4:7",
														"type": ""
													}
												],
												"src": "4917:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5375:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5434:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5436:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5436:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5436:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5406:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5399:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5399:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5392:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5392:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5414:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5425:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5421:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5421:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5429:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5411:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5388:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5388:45:7"
															},
															"nodeType": "YulIf",
															"src": "5385:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5465:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5480:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5483:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5465:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5354:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5357:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5363:7:7",
														"type": ""
													}
												],
												"src": "5323:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5542:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5573:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5594:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5601:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5606:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5597:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5597:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5587:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5587:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5587:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5638:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5641:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5631:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5631:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5631:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5666:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5669:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5659:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5659:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5562:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5555:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5555:9:7"
															},
															"nodeType": "YulIf",
															"src": "5552:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5693:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5702:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5705:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5693:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5527:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5530:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5536:1:7",
														"type": ""
													}
												],
												"src": "5496:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5892:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5909:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5902:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5959:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5932:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5932:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5982:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5993:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5978:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5998:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5971:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6053:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6064:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6049:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6069:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6042:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6085:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6097:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6108:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6093:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6093:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6085:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5869:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5883:4:7",
														"type": ""
													}
												],
												"src": "5718:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6297:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6314:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6307:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6348:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6359:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6364:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6337:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6337:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6337:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6387:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6398:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6383:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6403:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6376:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6376:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6458:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6469:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6454:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6454:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6474:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6447:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6447:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6447:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6500:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6511:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6496:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6496:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6488:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6274:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6288:4:7",
														"type": ""
													}
												],
												"src": "6123:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6700:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6717:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6728:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6751:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6762:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6747:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6747:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6767:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6740:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6740:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6740:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6790:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6801:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6786:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6786:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6806:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6779:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6779:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6847:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6847:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6677:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6691:4:7",
														"type": ""
													}
												],
												"src": "6526:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7075:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7086:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7068:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7068:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7068:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7109:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7120:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7105:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7105:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7098:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7098:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7148:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7159:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7144:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7164:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7137:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7219:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7230:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7215:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7215:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7235:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7208:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7208:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7208:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7252:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7264:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7275:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7252:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7035:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7049:4:7",
														"type": ""
													}
												],
												"src": "6884:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7464:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7526:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7504:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7554:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7565:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7550:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7550:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7570:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7543:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7543:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7625:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7636:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7621:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7621:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7641:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7614:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7656:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7668:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7656:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7441:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7455:4:7",
														"type": ""
													}
												],
												"src": "7290:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7868:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7885:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7896:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7878:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7878:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7919:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7930:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7915:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7915:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7935:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7908:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7908:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7908:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7958:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7969:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7954:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7954:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7974:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7947:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8029:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8040:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8025:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8025:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8045:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8018:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8063:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8075:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8071:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8071:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8063:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7845:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7859:4:7",
														"type": ""
													}
												],
												"src": "7694:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8182:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8228:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8237:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8240:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8230:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8230:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8230:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8203:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8199:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8195:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:32:7"
															},
															"nodeType": "YulIf",
															"src": "8192:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8253:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8269:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8263:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8148:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8159:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8171:6:7",
														"type": ""
													}
												],
												"src": "8101:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8464:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8481:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8474:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8474:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8515:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8526:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8511:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8511:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8531:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8504:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8504:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8504:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8554:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8565:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8550:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8550:18:7"
																	},
																	{
																		"hexValue": "4e6f7420636f6d70617469626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8570:16:7",
																		"type": "",
																		"value": "Not compatible"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8543:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8543:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8596:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8608:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8619:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8604:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8604:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8596:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8441:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8455:4:7",
														"type": ""
													}
												],
												"src": "8290:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8807:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8824:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8835:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8817:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8858:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8869:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8854:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8854:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8874:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8847:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8847:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8897:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8908:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8893:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8913:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8886:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8886:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8886:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8956:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8968:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8979:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8964:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8956:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8798:4:7",
														"type": ""
													}
												],
												"src": "8633:355:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"No permission except to owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already initalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not compatible\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a140ae231161007c578063a140ae23146102af578063a457c2d7146102c2578063a9059cbb146102d5578063d3aceae2146102e8578063dc287c7e14610308578063dd62ed3e1461031b57600080fd5b806370a082311461024257806376809ce31461026b5780638129fc1c146102745780638da5cb5b1461027c57806395d89b41146102a757600080fd5b806323b872dd116100ff57806323b872dd146101d2578063313ce567146101e557806339509351146101f4578063469519541461020757806352d1902d1461021c57600080fd5b806306fdde031461013c578063095ea7b31461015a57806311d7fe4d1461017d578063158ef93e146101ac57806318160ddd146101c0575b600080fd5b61014461032e565b6040516101519190610b1d565b60405180910390f35b61016d610168366004610b53565b6103c0565b6040519015158152602001610151565b6101446040805160048152602481019091526020810180516001600160e01b031663204a7f0760e21b17905290565b60075461016d90600160a01b900460ff1681565b6002545b604051908152602001610151565b61016d6101e0366004610b7d565b6103d8565b60405160128152602001610151565b61016d610202366004610b53565b6103fc565b61021a610215366004610bb9565b61041e565b005b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf76101c4565b6101c4610250366004610bb9565b6001600160a01b031660009081526020819052604090205490565b6101c460065481565b61021a610489565b60075461028f906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6101446104fa565b61021a6102bd366004610bd4565b610509565b61016d6102d0366004610b53565b610517565b61016d6102e3366004610b53565b610592565b6101c46102f6366004610bb9565b60086020526000908152604090205481565b6101c4610316366004610c00565b6105a0565b6101c4610329366004610c19565b6105bf565b60606003805461033d90610c43565b80601f016020809104026020016040519081016040528092919081815260200182805461036990610c43565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050905090565b6000336103ce8185856105ea565b5060019392505050565b6000336103e685828561070e565b6103f1858585610788565b506001949350505050565b6000336103ce81858561040f83836105bf565b6104199190610c94565b6105ea565b6007546001600160a01b0316331461047d5760405162461bcd60e51b815260206004820152601d60248201527f4e6f207065726d697373696f6e2065786365707420746f206f776e657200000060448201526064015b60405180910390fd5b6104868161092c565b50565b6007546001600160a01b0316156104d75760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a5b9a5d185b1a5e995960721b6044820152606401610474565b6007805460ff60a01b1933166001600160a81b031990911617600160a01b179055565b60606004805461033d90610c43565b6105138183610a11565b5050565b6000338161052582866105bf565b9050838110156105855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610474565b6103f182868684036105ea565b6000336103ce818585610788565b600060646105af83600a610cac565b6105b99190610ccb565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661064c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610474565b6001600160a01b0382166106ad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610474565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061071a84846105bf565b9050600019811461078257818110156107755760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610474565b61078284848484036105ea565b50505050565b6001600160a01b0383166107ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610474565b6001600160a01b03821661084e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610474565b6001600160a01b038316600090815260208190526040902054818110156108c65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610474565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610782565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190610ced565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7146109ed5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420636f6d70617469626c6560901b6044820152606401610474565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b6001600160a01b038216610a675760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610474565b8060026000828254610a799190610c94565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b81811015610af657602081850181015186830182015201610ada565b81811115610b08576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b306020830184610ad0565b9392505050565b80356001600160a01b0381168114610b4e57600080fd5b919050565b60008060408385031215610b6657600080fd5b610b6f83610b37565b946020939093013593505050565b600080600060608486031215610b9257600080fd5b610b9b84610b37565b9250610ba960208501610b37565b9150604084013590509250925092565b600060208284031215610bcb57600080fd5b610b3082610b37565b60008060408385031215610be757600080fd5b82359150610bf760208401610b37565b90509250929050565b600060208284031215610c1257600080fd5b5035919050565b60008060408385031215610c2c57600080fd5b610c3583610b37565b9150610bf760208401610b37565b600181811c90821680610c5757607f821691505b60208210811415610c7857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ca757610ca7610c7e565b500190565b6000816000190483118215151615610cc657610cc6610c7e565b500290565b600082610ce857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610cff57600080fd5b505191905056fea264697066735822122088b481bfe6ffd8fe95bccce7cda0112dcf5b73df2e1474d8ab719b9d77abeacd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA140AE23 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA140AE23 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xDC287C7E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x46951954 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x11D7FE4D EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x144 PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x204A7F07 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x489 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x21A PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x33D SWAP1 PUSH2 0xC43 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xC43 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x399 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3E6 DUP6 DUP3 DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x3F1 DUP6 DUP6 DUP6 PUSH2 0x788 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x40F DUP4 DUP4 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207065726D697373696F6E2065786365707420746F206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x486 DUP2 PUSH2 0x92C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481A5B9A5D185B1A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT CALLER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x33D SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x513 DUP2 DUP4 PUSH2 0xA11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x525 DUP3 DUP7 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x3F1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CE DUP2 DUP6 DUP6 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x5AF DUP4 PUSH1 0xA PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0xCCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP5 DUP5 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x782 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x782 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x782 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F7420636F6D70617469626C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xADA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB08 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB30 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6F DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9B DUP5 PUSH2 0xB37 JUMP JUMPDEST SWAP3 POP PUSH2 0xBA9 PUSH1 0x20 DUP6 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB30 DUP3 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xBF7 PUSH1 0x20 DUP5 ADD PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC35 DUP4 PUSH2 0xB37 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF7 PUSH1 0x20 DUP5 ADD PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0xC7E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCC6 JUMPI PUSH2 0xCC6 PUSH2 0xC7E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCE8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB4 DUP2 0xBF 0xE6 SELFDESTRUCT 0xD8 INVALID SWAP6 0xBC 0xCC 0xE7 0xCD LOG0 GT 0x2D 0xCF JUMPDEST PUSH20 0xDF2E1474D8AB719B9D77ABEACD64736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "98:338:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1318:14:7;;1311:22;1293:41;;1281:2;1266:18;4431:197:3;1153:187:7;839:116:0;;909:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;909:39:0;-1:-1:-1;;;909:39:0;;;;839:116;362:31;;;;;-1:-1:-1;;;362:31:0;;;;;;3242:106:3;3329:12;;3242:106;;;1714:25:7;;;1702:2;1687:18;3242:106:3;1568:177:7;5190:286:3;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;2225:36:7;;2213:2;2198:18;3091:91:3;2083:184:7;5871:234:3;;;;;;:::i;:::-;;:::i;1052:97:0:-;;;;;;:::i;:::-;;:::i;:::-;;627:145:2;699:66;627:145;;3406:125:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:3;3480:7;3506:18;;;;;;;;;;;;3406:125;304:26:0;;;;;;681:152;;;:::i;336:20::-;;;;;-1:-1:-1;;;;;336:20:0;;;;;;-1:-1:-1;;;;;2809:32:7;;;2791:51;;2779:2;2764:18;336:20:0;2645:203:7;2365:102:3;;;:::i;962:86:0:-;;;;;;:::i;:::-;;:::i;6592:427:3:-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;451:40:0:-;;;;;;:::i;:::-;;;;;;;;;;;;;;326:105:1;;;;;;:::i;:::-;;:::i;3974:149:3:-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:3;719:10:6;4584:7:3;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:3;;4431:197;-1:-1:-1;;;4431:197:3:o;5190:286::-;5317:4;719:10:6;5373:38:3;5389:4;719:10:6;5404:6:3;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:3;;5190:286;-1:-1:-1;;;;5190:286:3:o;5871:234::-;5959:4;719:10:6;6013:64:3;719:10:6;6029:7:3;6066:10;6038:25;719:10:6;6029:7:3;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1052:97:0:-;599:5;;-1:-1:-1;;;;;599:5:0;608:10;599:19;591:61;;;;-1:-1:-1;;;591:61:0;;4414:2:7;591:61:0;;;4396:21:7;4453:2;4433:18;;;4426:30;4492:31;4472:18;;;4465:59;4541:18;;591:61:0;;;;;;;;;1116:26:::1;1134:7;1116:17;:26::i;:::-;1052:97:::0;:::o;681:152::-;728:5;;-1:-1:-1;;;;;728:5:0;:19;720:50;;;;-1:-1:-1;;;720:50:0;;4772:2:7;720:50:0;;;4754:21:7;4811:2;4791:18;;;4784:30;-1:-1:-1;;;4830:18:7;;;4823:48;4888:18;;720:50:0;4570:342:7;720:50:0;780:5;:18;;-1:-1:-1;;;;788:10:0;808:18;-1:-1:-1;;;;;;808:18:0;;;;-1:-1:-1;;;808:18:0;;;681:152::o;2365:102:3:-;2421:13;2453:7;2446:14;;;;;:::i;962:86:0:-;1023:18;1029:3;1034:6;1023:5;:18::i;:::-;962:86;;:::o;6592:427:3:-;6685:4;719:10:6;6685:4:3;6766:25;719:10:6;6783:7:3;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:3;;5119:2:7;6801:85:3;;;5101:21:7;5158:2;5138:18;;;5131:30;5197:34;5177:18;;;5170:62;-1:-1:-1;;;5248:18:7;;;5241:35;5293:19;;6801:85:3;4917:401:7;6801:85:3;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:3;719:10:6;3877:2:3;3881:6;3860:9;:28::i;326:105:1:-;382:9;421:3;408:11;:6;417:2;408:11;:::i;:::-;407:17;;;;:::i;:::-;400:24;326:105;-1:-1:-1;;326:105:1:o;3974:149:3:-;-1:-1:-1;;;;;4089:18:3;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:3;;10627:68;;;;-1:-1:-1;;;10627:68:3;;5920:2:7;10627:68:3;;;5902:21:7;5959:2;5939:18;;;5932:30;5998:34;5978:18;;;5971:62;-1:-1:-1;;;6049:18:7;;;6042:34;6093:19;;10627:68:3;5718:400:7;10627:68:3;-1:-1:-1;;;;;10713:21:3;;10705:68;;;;-1:-1:-1;;;10705:68:3;;6325:2:7;10705:68:3;;;6307:21:7;6364:2;6344:18;;;6337:30;6403:34;6383:18;;;6376:62;-1:-1:-1;;;6454:18:7;;;6447:32;6496:19;;10705:68:3;6123:398:7;10705:68:3;-1:-1:-1;;;;;10784:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1714:25:7;;;10835:32:3;;1687:18:7;10835:32:3;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:3;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:3;;6728:2:7;11404:68:3;;;6710:21:7;6767:2;6747:18;;;6740:30;6806:31;6786:18;;;6779:59;6855:18;;11404:68:3;6526:353:7;11404:68:3;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:3;;7591:68;;;;-1:-1:-1;;;7591:68:3;;7086:2:7;7591:68:3;;;7068:21:7;7125:2;7105:18;;;7098:30;7164:34;7144:18;;;7137:62;-1:-1:-1;;;7215:18:7;;;7208:35;7260:19;;7591:68:3;6884:401:7;7591:68:3;-1:-1:-1;;;;;7677:16:3;;7669:64;;;;-1:-1:-1;;;7669:64:3;;7492:2:7;7669:64:3;;;7474:21:7;7531:2;7511:18;;;7504:30;7570:34;7550:18;;;7543:62;-1:-1:-1;;;7621:18:7;;;7614:33;7664:19;;7669:64:3;7290:399:7;7669:64:3;-1:-1:-1;;;;;7815:15:3;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:3;;7896:2:7;7840:72:3;;;7878:21:7;7935:2;7915:18;;;7908:30;7974:34;7954:18;;;7947:62;-1:-1:-1;;;8025:18:7;;;8018:36;8071:19;;7840:72:3;7694:402:7;7840:72:3;-1:-1:-1;;;;;7946:15:3;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1714:25:7;;;8161:13:3;;8210:26;;1687:18:7;8210:26:3;;;;;;;8247:37;12180:121;220:401:2;396:10;-1:-1:-1;;;;;386:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;315:66;307:116;286:177;;;;-1:-1:-1;;;286:177:2;;8492:2:7;286:177:2;;;8474:21:7;8531:2;8511:18;;;8504:30;-1:-1:-1;;;8550:18:7;;;8543:44;8604:18;;286:177:2;8290:338:7;286:177:2;526:66;519:86;220:401::o;8567:535:3:-;-1:-1:-1;;;;;8650:21:3;;8642:65;;;;-1:-1:-1;;;8642:65:3;;8835:2:7;8642:65:3;;;8817:21:7;8874:2;8854:18;;;8847:30;8913:33;8893:18;;;8886:61;8964:18;;8642:65:3;8633:355:7;8642:65:3;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1714:25:7;;;8999:37:3;;1687:18:7;8999:37:3;;;;;;;962:86:0;;:::o;14:472:7:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;336:6;333:1;330:13;327:87;;;402:1;395:4;386:6;381:3;377:16;373:27;366:38;327:87;-1:-1:-1;468:2:7;447:15;-1:-1:-1;;443:29:7;434:39;;;;475:4;430:50;;14:472;-1:-1:-1;;14:472:7:o;491:220::-;640:2;629:9;622:21;603:4;660:45;701:2;690:9;686:18;678:6;660:45;:::i;:::-;652:53;491:220;-1:-1:-1;;;491:220:7:o;716:173::-;784:20;;-1:-1:-1;;;;;833:31:7;;823:42;;813:70;;879:1;876;869:12;813:70;716:173;;;:::o;894:254::-;962:6;970;1023:2;1011:9;1002:7;998:23;994:32;991:52;;;1039:1;1036;1029:12;991:52;1062:29;1081:9;1062:29;:::i;:::-;1052:39;1138:2;1123:18;;;;1110:32;;-1:-1:-1;;;894:254:7:o;1750:328::-;1827:6;1835;1843;1896:2;1884:9;1875:7;1871:23;1867:32;1864:52;;;1912:1;1909;1902:12;1864:52;1935:29;1954:9;1935:29;:::i;:::-;1925:39;;1983:38;2017:2;2006:9;2002:18;1983:38;:::i;:::-;1973:48;;2068:2;2057:9;2053:18;2040:32;2030:42;;1750:328;;;;;:::o;2272:186::-;2331:6;2384:2;2372:9;2363:7;2359:23;2355:32;2352:52;;;2400:1;2397;2390:12;2352:52;2423:29;2442:9;2423:29;:::i;2853:254::-;2921:6;2929;2982:2;2970:9;2961:7;2957:23;2953:32;2950:52;;;2998:1;2995;2988:12;2950:52;3034:9;3021:23;3011:33;;3063:38;3097:2;3086:9;3082:18;3063:38;:::i;:::-;3053:48;;2853:254;;;;;:::o;3112:180::-;3171:6;3224:2;3212:9;3203:7;3199:23;3195:32;3192:52;;;3240:1;3237;3230:12;3192:52;-1:-1:-1;3263:23:7;;3112:180;-1:-1:-1;3112:180:7:o;3297:260::-;3365:6;3373;3426:2;3414:9;3405:7;3401:23;3397:32;3394:52;;;3442:1;3439;3432:12;3394:52;3465:29;3484:9;3465:29;:::i;:::-;3455:39;;3513:38;3547:2;3536:9;3532:18;3513:38;:::i;3562:380::-;3641:1;3637:12;;;;3684;;;3705:61;;3759:4;3751:6;3747:17;3737:27;;3705:61;3812:2;3804:6;3801:14;3781:18;3778:38;3775:161;;;3858:10;3853:3;3849:20;3846:1;3839:31;3893:4;3890:1;3883:15;3921:4;3918:1;3911:15;3775:161;;3562:380;;;:::o;3947:127::-;4008:10;4003:3;3999:20;3996:1;3989:31;4039:4;4036:1;4029:15;4063:4;4060:1;4053:15;4079:128;4119:3;4150:1;4146:6;4143:1;4140:13;4137:39;;;4156:18;;:::i;:::-;-1:-1:-1;4192:9:7;;4079:128::o;5323:168::-;5363:7;5429:1;5425;5421:6;5417:14;5414:1;5411:21;5406:1;5399:9;5392:17;5388:45;5385:71;;;5436:18;;:::i;:::-;-1:-1:-1;5476:9:7;;5323:168::o;5496:217::-;5536:1;5562;5552:132;;5606:10;5601:3;5597:20;5594:1;5587:31;5641:4;5638:1;5631:15;5669:4;5666:1;5659:15;5552:132;-1:-1:-1;5698:9:7;;5496:217::o;8101:184::-;8171:6;8224:2;8212:9;8203:7;8199:23;8195:32;8192:52;;;8240:1;8237;8230:12;8192:52;-1:-1:-1;8263:16:7;;8101:184;-1:-1:-1;8101:184:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "677600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balance(address)": "2607",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2563",
								"calculateBurn(uint256)": "556",
								"decimal()": "2340",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26994",
								"encodeer()": "infinite",
								"increaseAllowance(address,uint256)": "27045",
								"initialize()": "26617",
								"initialized()": "2417",
								"mintToken(uint256,address)": "50827",
								"name()": "infinite",
								"owner()": "2426",
								"proxiableUUID()": "303",
								"symbol()": "infinite",
								"totalSupply()": "2393",
								"transfer(address,uint256)": "51112",
								"transferFrom(address,address,uint256)": "infinite",
								"updateCode(address)": "infinite"
							},
							"internal": {
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 304,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 304,
									"end": 330,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 362,
									"end": 393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 436,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "22A4A816989C1919"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "45495049"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 98,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 436,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088b481bfe6ffd8fe95bccce7cda0112dcf5b73df2e1474d8ab719b9d77abeacd64736f6c634300080a0033",
									".code": [
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "A140AE23"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "A140AE23"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "D3ACEAE2"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "DC287C7E"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "76809CE3"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "8129FC1C"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "46951954"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "52D1902D"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "11D7FE4D"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "158EF93E"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 98,
											"end": 436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1153,
											"end": 1340,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 839,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 839,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 839,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 909,
											"end": 948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "204A7F07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 909,
											"end": 948,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 839,
											"end": 955,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 362,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 362,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 362,
											"end": 393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1704,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1568,
											"end": 1745,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2083,
											"end": 2267,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 772,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 304,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 304,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 304,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 330,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 336,
											"end": 356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2841,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2645,
											"end": 2848,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 491,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 431,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 326,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 326,
											"end": 431,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 326,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 599,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 618,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 591,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4396,
											"end": 4417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4433,
											"end": 4451,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4492,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207065726D697373696F6E2065786365707420746F206F776E6572000000"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4465,
											"end": 4524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 591,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 591,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 591,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1149,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 728,
											"end": 733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 728,
											"end": 733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 720,
											"end": 770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4784,
											"end": 4814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481A5B9A5D185B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4570,
											"end": 4912,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 780,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 780,
											"end": 798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 788,
											"end": 798,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 808,
											"end": 826,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 833,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1029,
											"end": 1032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5231,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5293,
											"end": 5312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4917,
											"end": 5318,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 326,
											"end": 431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 382,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 407,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 407,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 407,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 407,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 407,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 407,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 400,
											"end": 424,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 326,
											"end": 431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 326,
											"end": 431,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5920,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 5962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 6033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6049,
											"end": 6067,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6049,
											"end": 6067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6112,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6093,
											"end": 6112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5718,
											"end": 6118,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6328,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6364,
											"end": 6366,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6403,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6438,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6472,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6454,
											"end": 6472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6454,
											"end": 6472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6515,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6496,
											"end": 6515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 6123,
											"end": 6521,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6728,
											"end": 6730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 6526,
											"end": 6879,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7128,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7198,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7137,
											"end": 7199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7215,
											"end": 7233,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7215,
											"end": 7233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7279,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7260,
											"end": 7279,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 6884,
											"end": 7285,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7604,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7290,
											"end": 7689,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7935,
											"end": 7937,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7915,
											"end": 7933,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7915,
											"end": 7933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 8008,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8009,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8071,
											"end": 8090,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8071,
											"end": 8090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7694,
											"end": 8096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 220,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 386,
											"end": 421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 386,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 386,
											"end": 423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 381,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 307,
											"end": 423,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 286,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8492,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 286,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8474,
											"end": 8495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8531,
											"end": 8533,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 8511,
											"end": 8529,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8511,
											"end": 8529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8504,
											"end": 8534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420636F6D70617469626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8550,
											"end": 8568,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8550,
											"end": 8568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 286,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 8290,
											"end": 8628,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 286,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 286,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 526,
											"end": 592,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 519,
											"end": 605,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8837,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8817,
											"end": 8838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8854,
											"end": 8872,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8854,
											"end": 8872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8913,
											"end": 8946,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8886,
											"end": 8947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8633,
											"end": 8988,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 486,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 14,
											"end": 486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 336,
											"end": 342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 333,
											"end": 334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 343,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 327,
											"end": 414,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 327,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 327,
											"end": 414,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 402,
											"end": 403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 381,
											"end": 384,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 377,
											"end": 393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 373,
											"end": 400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 366,
											"end": 404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 327,
											"end": 414,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 327,
											"end": 414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 468,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 447,
											"end": 462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 443,
											"end": 472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 434,
											"end": 473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 430,
											"end": 480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 486,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 711,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 491,
											"end": 711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 640,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 660,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 660,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 652,
											"end": 705,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 491,
											"end": 711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 491,
											"end": 711,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 716,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 716,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 784,
											"end": 804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 784,
											"end": 804,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 833,
											"end": 864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 833,
											"end": 864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 823,
											"end": 865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 823,
											"end": 865,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 813,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 813,
											"end": 883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 879,
											"end": 880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 813,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 813,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 716,
											"end": 889,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1148,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 894,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 994,
											"end": 1026,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 991,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1062,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 894,
											"end": 1148,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1898,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1899,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1864,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1935,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2017,
											"end": 2019,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1983,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2078,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2458,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2272,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2387,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2352,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2423,
											"end": 2452,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2968,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 2985,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2950,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3044,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3063,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 3107,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3112,
											"end": 3292,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3112,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3222,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3227,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3244,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3192,
											"end": 3244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3240,
											"end": 3241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3192,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3286,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3292,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3297,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3297,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3412,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3401,
											"end": 3424,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3429,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3394,
											"end": 3446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3444,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3446,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3394,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3547,
											"end": 3549,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3513,
											"end": 3551,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3562,
											"end": 3942,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3562,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3759,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3814,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3815,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3816,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3775,
											"end": 3936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3853,
											"end": 3856,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3849,
											"end": 3869,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3870,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 3898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3925,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3936,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3775,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3942,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3947,
											"end": 4074,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3947,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4003,
											"end": 4006,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3999,
											"end": 4019,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4036,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4029,
											"end": 4044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4063,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4207,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4079,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4140,
											"end": 4153,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4176,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4137,
											"end": 4176,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4207,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5323,
											"end": 5491,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5323,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5427,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5417,
											"end": 5431,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5432,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5409,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5385,
											"end": 5456,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5491,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5496,
											"end": 5713,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5496,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5552,
											"end": 5684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5616,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5601,
											"end": 5604,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5597,
											"end": 5617,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5645,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5631,
											"end": 5646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5666,
											"end": 5667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5674,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5684,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5552,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5698,
											"end": 5707,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 5707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5496,
											"end": 5713,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8101,
											"end": 8285,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8101,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8203,
											"end": 8210,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8222,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8195,
											"end": 8227,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8244,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8192,
											"end": 8244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8244,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8192,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8263,
											"end": 8279,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8101,
											"end": 8285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 8285,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateBurn(uint256)": "dc287c7e",
							"decimal()": "76809ce3",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"encodeer()": "11d7fe4d",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"initialized()": "158ef93e",
							"mintToken(uint256,address)": "a140ae23",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateCode(address)": "46951954"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCode\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Upgradable E1P 1822/Implementation2.sol\":\"Implementation2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Upgradable E1P 1822/Implementation1.sol\":{\"keccak256\":\"0x505302a014088a162a361ca5f550316d68cbea64ab8ab3a66ef4edb47a987605\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f7dbde88186b635fee01854007fdfc897a78b5ea02afa21e77e091085ea9b7ea\",\"dweb:/ipfs/QmYN187Ws3SMA7mjka7hoiNyLWsxAVNx5zsP4ANajyVauh\"]},\"Upgradable E1P 1822/Implementation2.sol\":{\"keccak256\":\"0xa9df639ddac684702b131aa39959dfe2c5a2fdabdb2e268385118aff5ad2ca5f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d206052186f8fe4389651950a543f40716c175e53e518b569cad8bfac67d1f5b\",\"dweb:/ipfs/QmahK1tjA7Q73JNNUHNAaArVXztqFGGJiE9hgpzo8vmxAS\"]},\"Upgradable E1P 1822/Proxible.sol\":{\"keccak256\":\"0x4310e5f07a90127bda2642bf19f3dcc044b22c76703394e869fed03b90d5b417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7407757aa5edbdda889aeab0fb0a224c3613f153109108be9f3bde3b9f40688e\",\"dweb:/ipfs/QmcvYusmf63QZfH39EUydvCqjzofCb7WUdc7bZfCBD9qe5\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 198,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 200,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 202,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 204,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 11,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "circulatingSuppy",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "decimal",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "initialized",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 23,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_balance",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "Upgradable E1P 1822/Implementation2.sol:Implementation2",
								"label": "_allowance",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Upgradable E1P 1822/Proxible.sol": {
				"Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Upgradable E1P 1822/Proxible.sol\":65:774  contract Proxiable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Upgradable E1P 1822/Proxible.sol\":65:774  contract Proxiable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x52d1902d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n    tag_3:\n        /* \"Upgradable E1P 1822/Proxible.sol\":699:765  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Upgradable E1P 1822/Proxible.sol\":627:772  function proxiableUUID() public pure returns (bytes32) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa2646970667358221220ac6ec8ed6ab457cf0e30c4ed89412b6e82996fe59ed1dd36944c8ba8b88d32a164736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060968061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806352d1902d14602d575b600080fd5b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760405190815260200160405180910390f3fea2646970667358221220ac6ec8ed6ab457cf0e30c4ed89412b6e82996fe59ed1dd36944c8ba8b88d32a164736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x96 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH15 0xC8ED6AB457CF0E30C4ED89412B6E82 SWAP10 PUSH16 0xE59ED1DD36944C8BA8B88D32A164736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "65:709:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@proxiableUUID_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806352d1902d14602d575b600080fd5b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760405190815260200160405180910390f3fea2646970667358221220ac6ec8ed6ab457cf0e30c4ed89412b6e82996fe59ed1dd36944c8ba8b88d32a164736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH15 0xC8ED6AB457CF0E30C4ED89412B6E82 SWAP10 PUSH16 0xE59ED1DD36944C8BA8B88D32A164736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "65:709:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:145;699:66;627:145;;160:25:7;;;148:2;133:18;627:145:2;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "30000",
								"executionCost": "81",
								"totalCost": "30081"
							},
							"external": {
								"proxiableUUID()": "146"
							},
							"internal": {
								"updateCodeAddress(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 65,
									"end": 774,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 774,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac6ec8ed6ab457cf0e30c4ed89412b6e82996fe59ed1dd36944c8ba8b88d32a164736f6c634300080a0033",
									".code": [
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 65,
											"end": 774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 627,
											"end": 772,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 772,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 772,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 627,
											"end": 772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 772,
											"name": "RETURN",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Upgradable E1P 1822/Proxible.sol\":\"Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Upgradable E1P 1822/Proxible.sol\":{\"keccak256\":\"0x4310e5f07a90127bda2642bf19f3dcc044b22c76703394e869fed03b90d5b417\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7407757aa5edbdda889aeab0fb0a224c3613f153109108be9f3bde3b9f40688e\",\"dweb:/ipfs/QmcvYusmf63QZfH39EUydvCqjzofCb7WUdc7bZfCBD9qe5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_146:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_140:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_148:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_150:\n        /* \"#utility.yul\":962:991   */\n      tag_151\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_155:\n        /* \"#utility.yul\":1612:1641   */\n      tag_156\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_157\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_160:\n        /* \"#utility.yul\":2100:2129   */\n      tag_161\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_163:\n        /* \"#utility.yul\":2308:2337   */\n      tag_164\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_165\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_167:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d5330fa3c171786ce48d12bb3d2cbd9130e1aaf8dc11bc6173ddf1060864ec664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:7"
															},
															"nodeType": "YulIf",
															"src": "921:80:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:885:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:7"
															},
															"nodeType": "YulIf",
															"src": "1164:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:7"
															},
															"nodeType": "YulIf",
															"src": "1301:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:7"
															},
															"nodeType": "YulIf",
															"src": "1474:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:7",
														"type": ""
													}
												],
												"src": "1036:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:7"
															},
															"nodeType": "YulIf",
															"src": "1746:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:7"
															},
															"nodeType": "YulIf",
															"src": "1816:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:7",
														"type": ""
													}
												],
												"src": "1603:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000aef38038062000aef8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61085d80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610801565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b602082108114156107fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082257634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212204d5330fa3c171786ce48d12bb3d2cbd9130e1aaf8dc11bc6173ddf1060864ec664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAEF CODESIZE SUB DUP1 PUSH3 0xAEF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85D DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x822 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MSTORE8 ADDRESS STATICCALL EXTCODECOPY OR OR DUP7 0xCE BASEFEE 0xD1 0x2B 0xB3 0xD2 0xCB 0xD9 SGT 0xE BYTE 0xAF DUP14 0xC1 SHL 0xC6 OR RETURNDATASIZE 0xDF LT PUSH1 0x86 0x4E 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1401:11610:3:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2065:17:3;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:11610:3;;;-1:-1:-1;1401:11610:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:7:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:7;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1401:11610:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_762": {
									"entryPoint": null,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_697": {
									"entryPoint": 856,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_751": {
									"entryPoint": null,
									"id": 751,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_878": {
									"entryPoint": null,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_740": {
									"entryPoint": 1148,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_523": {
									"entryPoint": 1270,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_318": {
									"entryPoint": 813,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_343": {
									"entryPoint": 562,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_251": {
									"entryPoint": null,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_446": {
									"entryPoint": 671,
									"id": 446,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_405": {
									"entryPoint": 622,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_231": {
									"entryPoint": 416,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_241": {
									"entryPoint": 656,
									"id": 241,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_376": {
									"entryPoint": 586,
									"id": 376,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_300": {
									"entryPoint": 799,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:7"
															},
															"nodeType": "YulIf",
															"src": "443:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:7"
															},
															"nodeType": "YulIf",
															"src": "713:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:7",
														"type": ""
													}
												],
												"src": "616:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:7"
															},
															"nodeType": "YulIf",
															"src": "891:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:7",
														"type": ""
													}
												],
												"src": "794:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:7",
														"type": ""
													}
												],
												"src": "1053:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:7",
														"type": ""
													}
												],
												"src": "1245:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:7"
															},
															"nodeType": "YulIf",
															"src": "1541:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:7",
														"type": ""
													}
												],
												"src": "1427:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:7",
														"type": ""
													}
												],
												"src": "1760:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:7"
															},
															"nodeType": "YulIf",
															"src": "2029:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:7",
														"type": ""
													}
												],
												"src": "1949:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:7"
															},
															"nodeType": "YulIf",
															"src": "2237:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:7",
														"type": ""
													}
												],
												"src": "2140:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:7"
															},
															"nodeType": "YulIf",
															"src": "2548:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:7"
															},
															"nodeType": "YulIf",
															"src": "2618:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:7",
														"type": ""
													}
												],
												"src": "2405:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:7"
															},
															"nodeType": "YulIf",
															"src": "2848:136:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"src": "2790:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:7",
														"type": ""
													}
												],
												"src": "3020:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:7",
														"type": ""
													}
												],
												"src": "3426:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:7",
														"type": ""
													}
												],
												"src": "3831:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:7",
														"type": ""
													}
												],
												"src": "4234:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:7",
														"type": ""
													}
												],
												"src": "4592:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:7",
														"type": ""
													}
												],
												"src": "4998:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:7",
														"type": ""
													}
												],
												"src": "5402:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610801565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b602082108114156107fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082257634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212204d5330fa3c171786ce48d12bb3d2cbd9130e1aaf8dc11bc6173ddf1060864ec664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x822 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MSTORE8 ADDRESS STATICCALL EXTCODECOPY OR OR DUP7 0xCE BASEFEE 0xD1 0x2B 0xB3 0xD2 0xCB 0xD9 SGT 0xE BYTE 0xAF DUP14 0xC1 SHL 0xC6 OR RETURNDATASIZE 0xDF LT PUSH1 0x86 0x4E 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1401:11610:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:7;;1211:22;1193:41;;1181:2;1166:18;4431:197:3;1053:187:7;3242:106:3;3329:12;;3242:106;;;1391:25:7;;;1379:2;1364:18;3242:106:3;1245:177:7;5190:286:3;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1902:36:7;;1890:2;1875:18;3091:91:3;1760:184:7;5871:234:3;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:3;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:3;719:10:6;4584:7:3;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:3;;4431:197;-1:-1:-1;;;4431:197:3:o;5190:286::-;5317:4;719:10:6;5373:38:3;5389:4;719:10:6;5404:6:3;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:3;;5190:286;-1:-1:-1;;;;5190:286:3:o;5871:234::-;5959:4;719:10:6;6013:64:3;719:10:6;6029:7:3;6066:10;6038:25;719:10:6;6029:7:3;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:6;6685:4:3;6766:25;719:10:6;6783:7:3;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:3;;3222:2:7;6801:85:3;;;3204:21:7;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:7;;;3344:35;3396:19;;6801:85:3;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:3;719:10:6;3877:2:3;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:3;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:3;;10627:68;;;;-1:-1:-1;;;10627:68:3;;3628:2:7;10627:68:3;;;3610:21:7;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:7;;;3750:34;3801:19;;10627:68:3;3426:400:7;10627:68:3;-1:-1:-1;;;;;10713:21:3;;10705:68;;;;-1:-1:-1;;;10705:68:3;;4033:2:7;10705:68:3;;;4015:21:7;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:7;;;4155:32;4204:19;;10705:68:3;3831:398:7;10705:68:3;-1:-1:-1;;;;;10784:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:7;;;10835:32:3;;1364:18:7;10835:32:3;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:3;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:3;;4436:2:7;11404:68:3;;;4418:21:7;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11404:68:3;4234:353:7;11404:68:3;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:3;;7591:68;;;;-1:-1:-1;;;7591:68:3;;4794:2:7;7591:68:3;;;4776:21:7;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:7;;;4916:35;4968:19;;7591:68:3;4592:401:7;7591:68:3;-1:-1:-1;;;;;7677:16:3;;7669:64;;;;-1:-1:-1;;;7669:64:3;;5200:2:7;7669:64:3;;;5182:21:7;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:7;;;5322:33;5372:19;;7669:64:3;4998:399:7;7669:64:3;-1:-1:-1;;;;;7815:15:3;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:3;;5604:2:7;7840:72:3;;;5586:21:7;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:7;;;5726:36;5779:19;;7840:72:3;5402:402:7;7840:72:3;-1:-1:-1;;;;;7946:15:3;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1391:25:7;;;8161:13:3;;8210:26;;1364:18:7;8210:26:3;;;;;;;8247:37;12180:121;14:597:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:7:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:7;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:7:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:7:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:7;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "428200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51134",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d5330fa3c171786ce48d12bb3d2cbd9130e1aaf8dc11bc6173ddf1060864ec664736f6c634300080a0033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 198,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 200,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 202,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 204,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Upgradable E1P 1822/Implementation1.sol": {
				"ast": {
					"absolutePath": "Upgradable E1P 1822/Implementation1.sol",
					"exportedSymbols": {
						"Context": [
							888
						],
						"ERC20": [
							763
						],
						"IERC20": [
							841
						],
						"IERC20Metadata": [
							866
						],
						"Implementation1": [
							101
						],
						"Proxiable": [
							176
						]
					},
					"id": 102,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 764,
							"src": "65:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Upgradable E1P 1822/Proxible.sol",
							"file": "./Proxible.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 177,
							"src": "175:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "4549502d31383232",
											"id": 5,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "235:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_843677e1ef90c365ae6f7d1cf822d36101dec28ef40886a75ab59e20ea86d176",
												"typeString": "literal_string \"EIP-1822\""
											},
											"value": "EIP-1822"
										},
										{
											"hexValue": "45495049",
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "247:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_2d997b54b17dd0be99e606469d08c3918525bb2f0e71a19ab1f8bd0c096a0e0c",
												"typeString": "literal_string \"EIPI\""
											},
											"value": "EIPI"
										}
									],
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "229:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "229:25:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "Proxiable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 176,
										"src": "256:9:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "256:9:0"
								}
							],
							"canonicalName": "Implementation1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101,
								176,
								763,
								866,
								841,
								888
							],
							"name": "Implementation1",
							"nameLocation": "210:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "circulatingSuppy",
									"nameLocation": "282:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "277:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "277:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "76809ce3",
									"id": 14,
									"mutability": "mutable",
									"name": "decimal",
									"nameLocation": "316:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "304:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "304:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "326:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 16,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "351:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "336:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "336:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 19,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "374:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "362:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 17,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 23,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "483:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "451:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "459:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "451:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "470:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_allowance",
									"nameLocation": "544:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "498:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "507:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "498:45:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "526:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "518:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "537:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "583:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 32,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "608:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "608:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "599:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207065726d697373696f6e2065786365707420746f206f776e6572",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "620:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7",
																"typeString": "literal_string \"No permission except to owner\""
															},
															"value": "No permission except to owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec874b6879a28ec412c7f6735381ff2468d7916ad849a1fc0a499b7b689047f7",
																"typeString": "literal_string \"No permission except to owner\""
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "591:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "591:61:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "660:1:0"
											}
										]
									},
									"id": 41,
									"name": "onlyOwner",
									"nameLocation": "571:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "580:2:0"
									},
									"src": "562:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "710:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 45,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "728:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "737:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 46,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "737:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "737:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "728:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e6974616c697a6564",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "749:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47",
																"typeString": "literal_string \"Already initalized\""
															},
															"value": "Already initalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10ea14d3e1f70ecfc6641b5b88e4a6d5e01bb91126630f02e826ae233d4ad47",
																"typeString": "literal_string \"Already initalized\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "720:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "720:50:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "780:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 55,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "788:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "788:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "780:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "780:18:0"
											},
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "808:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "822:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "808:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "808:18:0"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "690:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "700:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:0"
									},
									"scope": 101,
									"src": "681:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "892:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "696e697469616c697a652829",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "933:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
																"typeString": "literal_string \"initialize()\""
															},
															"value": "initialize()"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
																"typeString": "literal_string \"initialize()\""
															}
														],
														"expression": {
															"id": 69,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "909:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSignature",
														"nodeType": "MemberAccess",
														"src": "909:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bytes memory)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 68,
												"id": 73,
												"nodeType": "Return",
												"src": "902:46:0"
											}
										]
									},
									"functionSelector": "11d7fe4d",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeer",
									"nameLocation": "848:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "856:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "879:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 66,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:14:0"
									},
									"scope": 101,
									"src": "839:116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1014:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1029:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1034:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 82,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "1023:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1023:18:0"
											}
										]
									},
									"functionSelector": "a140ae23",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "971:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "981:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1002:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "994:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:26:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:0"
									},
									"scope": 101,
									"src": "962:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1106:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "updateCodeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1116:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1116:26:0"
											}
										]
									},
									"functionSelector": "46951954",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1089:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1089:9:0"
										}
									],
									"name": "updateCode",
									"nameLocation": "1061:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newCode",
												"nameLocation": "1080:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1072:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:17:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:0"
									},
									"scope": 101,
									"src": "1052:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "201:950:0",
							"usedErrors": []
						}
					],
					"src": "39:1112:0"
				},
				"id": 0
			},
			"Upgradable E1P 1822/Implementation2.sol": {
				"ast": {
					"absolutePath": "Upgradable E1P 1822/Implementation2.sol",
					"exportedSymbols": {
						"Context": [
							888
						],
						"ERC20": [
							763
						],
						"IERC20": [
							841
						],
						"IERC20Metadata": [
							866
						],
						"Implementation1": [
							101
						],
						"Implementation2": [
							144
						],
						"Proxiable": [
							176
						]
					},
					"id": 145,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:1"
						},
						{
							"absolutePath": "Upgradable E1P 1822/Implementation1.sol",
							"file": "./Implementation1.sol",
							"id": 104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 145,
							"sourceUnit": 102,
							"src": "65:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 105,
										"name": "Implementation1",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 101,
										"src": "126:15:1"
									},
									"id": 106,
									"nodeType": "InheritanceSpecifier",
									"src": "126:15:1"
								}
							],
							"canonicalName": "Implementation2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144,
								101,
								176,
								763,
								866,
								841,
								888
							],
							"name": "Implementation2",
							"nameLocation": "107:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "217:103:1",
										"statements": [
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "burnableToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "225:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 115,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "255:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 114,
															"name": "calculateBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "241:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "241:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "225:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "225:37:1"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "circulatingSuppy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "271:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 120,
															"name": "burnableToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "291:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 121,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "306:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "291:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "271:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "271:42:1"
											}
										]
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "163:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "174:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "169:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "169:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:13:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "burnableToken",
												"nameLocation": "203:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "198:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "198:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:20:1"
									},
									"scope": 144,
									"src": "154:166:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "392:39:1",
										"statements": [
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "400:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 134,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "408:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "417:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "408:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 137,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "407:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "421:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "407:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "400:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "400:24:1"
											}
										]
									},
									"functionSelector": "dc287c7e",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBurn",
									"nameLocation": "335:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "354:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "349:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:13:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "burn",
												"nameLocation": "387:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "382:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "382:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:11:1"
									},
									"scope": 144,
									"src": "326:105:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 145,
							"src": "98:338:1",
							"usedErrors": []
						}
					],
					"src": "39:397:1"
				},
				"id": 1
			},
			"Upgradable E1P 1822/Proxible.sol": {
				"ast": {
					"absolutePath": "Upgradable E1P 1822/Proxible.sol",
					"exportedSymbols": {
						"Proxiable": [
							176
						]
					},
					"id": 177,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Proxiable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 176,
							"linearizedBaseContracts": [
								176
							],
							"name": "Proxiable",
							"nameLocation": "74:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "276:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "307863356631366630666363363339666134386136393437383336643938353066353034373938353233626638633961336138376435383736636636323262636637",
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "315:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_89532207833283453166981358064394884954800891875771469636219037672473505217783_by_1",
																			"typeString": "int_const 8953...(69 digits omitted)...7783"
																		},
																		"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_89532207833283453166981358064394884954800891875771469636219037672473505217783_by_1",
																			"typeString": "int_const 8953...(69 digits omitted)...7783"
																		}
																	],
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "307:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 152,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "307:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "307:75:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 157,
																				"name": "newAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 148,
																				"src": "396:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 156,
																			"name": "Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 176,
																			"src": "386:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Proxiable_$176_$",
																				"typeString": "type(contract Proxiable)"
																			}
																		},
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "386:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Proxiable_$176",
																			"typeString": "contract Proxiable"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "386:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_bytes32_$",
																		"typeString": "function () pure external returns (bytes32)"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "386:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "307:116:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420636f6d70617469626c65",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "437:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b",
																"typeString": "literal_string \"Not compatible\""
															},
															"value": "Not compatible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ac5b5603479d3d36a15169e1fc317eb0a3b5e5002518f4462f0d4c851391e0b",
																"typeString": "literal_string \"Not compatible\""
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "286:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "286:177:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "286:177:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "482:133:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:66:2",
																		"type": "",
																		"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
																	},
																	{
																		"name": "newAddress",
																		"nodeType": "YulIdentifier",
																		"src": "594:10:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:86:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "519:86:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 148,
														"isOffset": false,
														"isSlot": false,
														"src": "594:10:2",
														"valueSize": 1
													}
												],
												"id": 165,
												"nodeType": "InlineAssembly",
												"src": "473:142:2"
											}
										]
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCodeAddress",
									"nameLocation": "229:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "255:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "247:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:20:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:0:2"
									},
									"scope": 176,
									"src": "220:401:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "682:90:2",
										"statements": [
											{
												"expression": {
													"hexValue": "307863356631366630666363363339666134386136393437383336643938353066353034373938353233626638633961336138376435383736636636323262636637",
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "699:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89532207833283453166981358064394884954800891875771469636219037672473505217783_by_1",
														"typeString": "int_const 8953...(69 digits omitted)...7783"
													},
													"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
												},
												"functionReturnParameters": 171,
												"id": 173,
												"nodeType": "Return",
												"src": "692:73:2"
											}
										]
									},
									"functionSelector": "52d1902d",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "636:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "673:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:9:2"
									},
									"scope": 176,
									"src": "627:145:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 177,
							"src": "65:709:2",
							"usedErrors": []
						}
					],
					"src": "39:737:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							888
						],
						"ERC20": [
							763
						],
						"IERC20": [
							841
						],
						"IERC20Metadata": [
							866
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 842,
							"src": "130:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 867,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 889,
							"src": "195:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 888,
										"src": "1419:7:3"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:3"
								},
								{
									"baseName": {
										"id": 185,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 841,
										"src": "1428:6:3"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:3"
								},
								{
									"baseName": {
										"id": 187,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 866,
										"src": "1436:14:3"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763,
								866,
								841,
								888
							],
							"name": "ERC20",
							"nameLocation": "1410:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "1457:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 191,
										"keyType": {
											"id": 189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 190,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 198,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "1509:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 197,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 196,
											"keyType": {
												"id": 194,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 200,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "1583:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "1618:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 201,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 204,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "1644:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 203,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2032:57:3",
										"statements": [
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2042:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 213,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2050:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:3"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 216,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2065:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 217,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2075:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:3"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 221,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1988:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2009:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:3"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:3"
									},
									"scope": 763,
									"src": "1976:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										853
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2223:29:3",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "2240:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "2233:12:3"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 224,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:3"
									},
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:3"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2208:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:3"
									},
									"scope": 763,
									"src": "2154:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										859
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2436:31:3",
										"statements": [
											{
												"expression": {
													"id": 238,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 204,
													"src": "2453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "2446:14:3"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 234,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:3"
									},
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:3"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2421:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:3"
									},
									"scope": 763,
									"src": "2365:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										865
									],
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3156:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 247,
												"id": 249,
												"nodeType": "Return",
												"src": "3166:9:3"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:3"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:3"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3149:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 245,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:3"
									},
									"scope": 763,
									"src": "3091:91:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										790
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3312:36:3",
										"statements": [
											{
												"expression": {
													"id": 258,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 200,
													"src": "3329:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 259,
												"nodeType": "Return",
												"src": "3322:19:3"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 254,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:3"
									},
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3303:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:3"
									},
									"scope": 763,
									"src": "3242:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										798
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "3489:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 270,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3506:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 272,
													"indexExpression": {
														"id": 271,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3516:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 273,
												"nodeType": "Return",
												"src": "3499:25:3"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:3"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3425:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3480:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:3"
									},
									"scope": 763,
									"src": "3406:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										808
									],
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3812:104:3",
										"statements": [
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3822:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 286,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 288,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3838:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3877:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3881:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 291,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3860:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 285,
												"id": 298,
												"nodeType": "Return",
												"src": "3898:11:3"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:3"
									},
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3745:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3757:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:3"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3806:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:3"
									},
									"scope": 763,
									"src": "3727:189:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										818
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "4072:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 311,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4089:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 313,
														"indexExpression": {
															"id": 312,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "4101:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 315,
													"indexExpression": {
														"id": 314,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "4108:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 316,
												"nodeType": "Return",
												"src": "4082:34:3"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:3"
									},
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3993:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4008:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4063:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:3"
									},
									"scope": 763,
									"src": "3974:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										828
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "4520:108:3",
										"statements": [
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 342,
														"src": "4530:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 329,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 331,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "4546:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4577:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4584:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4593:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "4568:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 328,
												"id": 341,
												"nodeType": "Return",
												"src": "4610:11:3"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 325,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:3"
									},
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4465:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4514:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:3"
									},
									"scope": 763,
									"src": "4431:197:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										840
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "5323:153:3",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "5333:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5351:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 362,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5389:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5395:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5404:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 361,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "5373:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5431:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5437:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5441:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 367,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5421:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "5458:11:3"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:3"
									},
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5221:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5243:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:3"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5317:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:3"
									},
									"scope": 763,
									"src": "5190:286:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "5965:140:3",
										"statements": [
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "5975:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 386,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 388,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5991:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "6022:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6029:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 395,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "6048:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 396,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "6055:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 394,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "6038:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 398,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "6066:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "6013:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 385,
												"id": 403,
												"nodeType": "Return",
												"src": "6087:11:3"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5898:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5915:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:3"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5959:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:3"
									},
									"scope": 763,
									"src": "5871:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "6691:328:3",
										"statements": [
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6701:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 415,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 417,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6717:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:3"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6739:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"id": 423,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "6776:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "6783:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "6766:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "6809:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 429,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "6829:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:3"
											},
											{
												"id": 442,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "6929:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "6936:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 437,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "6945:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 438,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "6964:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 434,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "6920:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 441,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 414,
												"id": 444,
												"nodeType": "Return",
												"src": "7001:11:3"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6619:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6636:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:3"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6685:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:3"
									},
									"scope": 763,
									"src": "6592:427:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "7581:710:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "7599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "7677:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7765:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "7771:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "7775:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "7744:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:3"
											},
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "7793:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"baseExpression": {
														"id": 484,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7815:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 486,
													"indexExpression": {
														"id": 485,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "7825:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "7848:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 490,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7863:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:3"
											},
											{
												"id": 509,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:3",
												"statements": [
													{
														"expression": {
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "7946:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"id": 496,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "7956:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 498,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "7964:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 499,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "7978:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 502,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:3"
													},
													{
														"expression": {
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 503,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "8161:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 505,
																"indexExpression": {
																	"id": 504,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "8171:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "8178:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 508,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 511,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8219:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8225:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "8229:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "8210:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "8205:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8267:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8273:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "8277:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "8247:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:3",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "7501:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "7523:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "7543:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:3"
									},
									"scope": 763,
									"src": "7473:818:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "8632:470:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "8650:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 542,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8751:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "8718:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:3"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "8778:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 551,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "8794:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:3"
											},
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:3",
												"statements": [
													{
														"expression": {
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 554,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "8946:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 556,
																"indexExpression": {
																	"id": 555,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "8956:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 557,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "8968:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9020:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9029:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "8999:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "8994:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9079:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "9047:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8599:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:3"
									},
									"scope": 763,
									"src": "8567:535:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "9487:594:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "9505:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9617:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 598,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "9575:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:3"
											},
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "9635:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"baseExpression": {
														"id": 609,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "9660:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 611,
													"indexExpression": {
														"id": 610,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "9670:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "9696:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 615,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "9714:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:3"
											},
											{
												"id": 632,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:3",
												"statements": [
													{
														"expression": {
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 620,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "9793:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 622,
																"indexExpression": {
																	"id": 621,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "9803:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "9814:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 624,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "9831:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 627,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:3"
													},
													{
														"expression": {
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 628,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "9930:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 629,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "9946:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9987:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 635,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10008:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "9978:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "EmitStatement",
												"src": "9973:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "10046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10067:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10026:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:3"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "9437:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "9454:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:3"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:3"
									},
									"scope": 763,
									"src": "9422:659:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "10617:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 663,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "10635:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 664,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "10713:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 674,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:3"
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 682,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "10784:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 685,
															"indexExpression": {
																"id": 683,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "10796:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 686,
														"indexExpression": {
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "10803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 687,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "10814:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 691,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "10844:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "10851:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10860:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "10835:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "EmitStatement",
												"src": "10830:37:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10531:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10579:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:3"
									},
									"scope": 763,
									"src": "10504:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "11275:321:3",
										"statements": [
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 739,
														"src": "11285:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 713,
												"initialValue": {
													"arguments": [
														{
															"id": 710,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "11322:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "11329:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 709,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "11312:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "11351:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 715,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "11347:243:3",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "11390:200:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 722,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "11412:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 723,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "11432:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 721,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:3"
														},
														{
															"id": 736,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 729,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "11523:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 730,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 702,
																				"src": "11530:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 731,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 708,
																					"src": "11539:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 732,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "11558:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 728,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "11514:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "11189:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "11212:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "11237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:3"
									},
									"scope": 763,
									"src": "11155:441:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "12299:2:3",
										"statements": []
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "12219:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "12241:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "12261:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:3"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:3"
									},
									"scope": 763,
									"src": "12180:121:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "13007:2:3",
										"statements": []
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "12927:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "12949:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "12969:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:3"
									},
									"scope": 763,
									"src": "12889:120:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 764,
							"src": "1401:11610:3",
							"usedErrors": []
						}
					],
					"src": "105:12907:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							841
						]
					},
					"id": 842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 766,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 841,
							"linearizedBaseContracts": [
								841
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 775,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 784,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 841,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 841,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 841,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 841,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 841,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 841,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 842,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2661:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							841
						],
						"IERC20Metadata": [
							866
						]
					},
					"id": 867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 867,
							"sourceUnit": 842,
							"src": "135:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 846,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 841,
										"src": "305:6:5"
									},
									"id": 847,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 845,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 866,
							"linearizedBaseContracts": [
								866,
								841
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 866,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 856,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 866,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 862,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 866,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 867,
							"src": "277:405:5",
							"usedErrors": []
						}
					],
					"src": "110:573:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							888
						]
					},
					"id": 889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 868,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 869,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 888,
							"linearizedBaseContracts": [
								888
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 874,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 873,
												"id": 876,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 888,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 883,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 882,
												"id": 885,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 888,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 889,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			}
		}
	}
}